// Underscore.js 1.3.3
// (c) 2009-2012 Jeremy Ashkenas, DocumentCloud Inc.
// Underscore is freely distributable under the MIT license.
// Portions of Underscore are inspired or borrowed from Prototype,
// Oliver Steele's Functional, and John Resig's Micro-Templating.
// For all details and documentation:
// http://documentcloud.github.com/underscore
(function(){function r(a,c,d){if(a===c)return 0!==a||1/a==1/c;if(null==a||null==c)return a===c;a._chain&&(a=a._wrapped);c._chain&&(c=c._wrapped);if(a.isEqual&&b.isFunction(a.isEqual))return a.isEqual(c);if(c.isEqual&&b.isFunction(c.isEqual))return c.isEqual(a);var e=l.call(a);if(e!=l.call(c))return!1;switch(e){case "[object String]":return a==""+c;case "[object Number]":return a!=+a?c!=+c:0==a?1/a==1/c:a==+c;case "[object Date]":case "[object Boolean]":return+a==+c;case "[object RegExp]":return a.source==
c.source&&a.global==c.global&&a.multiline==c.multiline&&a.ignoreCase==c.ignoreCase}if("object"!=typeof a||"object"!=typeof c)return!1;for(var f=d.length;f--;)if(d[f]==a)return!0;d.push(a);var f=0,g=!0;if("[object Array]"==e){if(f=a.length,g=f==c.length)for(;f--&&(g=f in a==f in c&&r(a[f],c[f],d)););}else{if("constructor"in a!="constructor"in c||a.constructor!=c.constructor)return!1;for(var h in a)if(b.has(a,h)&&(f++,!(g=b.has(c,h)&&r(a[h],c[h],d))))break;if(g){for(h in c)if(b.has(c,h)&&!f--)break;
g=!f}}d.pop();return g}var s=this,I=s._,o={},k=Array.prototype,p=Object.prototype,i=k.slice,J=k.unshift,l=p.toString,K=p.hasOwnProperty,y=k.forEach,z=k.map,A=k.reduce,B=k.reduceRight,C=k.filter,D=k.every,E=k.some,q=k.indexOf,F=k.lastIndexOf,p=Array.isArray,L=Object.keys,t=Function.prototype.bind,b=function(a){return new m(a)};"undefined"!==typeof exports?("undefined"!==typeof module&&module.exports&&(exports=module.exports=b),exports._=b):s._=b;b.VERSION="1.3.3";var j=b.each=b.forEach=function(a,
c,d){if(a!=null)if(y&&a.forEach===y)a.forEach(c,d);else if(a.length===+a.length)for(var e=0,f=a.length;e<f;e++){if(e in a&&c.call(d,a[e],e,a)===o)break}else for(e in a)if(b.has(a,e)&&c.call(d,a[e],e,a)===o)break};b.map=b.collect=function(a,c,b){var e=[];if(a==null)return e;if(z&&a.map===z)return a.map(c,b);j(a,function(a,g,h){e[e.length]=c.call(b,a,g,h)});if(a.length===+a.length)e.length=a.length;return e};b.reduce=b.foldl=b.inject=function(a,c,d,e){var f=arguments.length>2;a==null&&(a=[]);if(A&&
a.reduce===A){e&&(c=b.bind(c,e));return f?a.reduce(c,d):a.reduce(c)}j(a,function(a,b,i){if(f)d=c.call(e,d,a,b,i);else{d=a;f=true}});if(!f)throw new TypeError("Reduce of empty array with no initial value");return d};b.reduceRight=b.foldr=function(a,c,d,e){var f=arguments.length>2;a==null&&(a=[]);if(B&&a.reduceRight===B){e&&(c=b.bind(c,e));return f?a.reduceRight(c,d):a.reduceRight(c)}var g=b.toArray(a).reverse();e&&!f&&(c=b.bind(c,e));return f?b.reduce(g,c,d,e):b.reduce(g,c)};b.find=b.detect=function(a,
c,b){var e;G(a,function(a,g,h){if(c.call(b,a,g,h)){e=a;return true}});return e};b.filter=b.select=function(a,c,b){var e=[];if(a==null)return e;if(C&&a.filter===C)return a.filter(c,b);j(a,function(a,g,h){c.call(b,a,g,h)&&(e[e.length]=a)});return e};b.reject=function(a,c,b){var e=[];if(a==null)return e;j(a,function(a,g,h){c.call(b,a,g,h)||(e[e.length]=a)});return e};b.every=b.all=function(a,c,b){var e=true;if(a==null)return e;if(D&&a.every===D)return a.every(c,b);j(a,function(a,g,h){if(!(e=e&&c.call(b,
a,g,h)))return o});return!!e};var G=b.some=b.any=function(a,c,d){c||(c=b.identity);var e=false;if(a==null)return e;if(E&&a.some===E)return a.some(c,d);j(a,function(a,b,h){if(e||(e=c.call(d,a,b,h)))return o});return!!e};b.include=b.contains=function(a,c){var b=false;if(a==null)return b;if(q&&a.indexOf===q)return a.indexOf(c)!=-1;return b=G(a,function(a){return a===c})};b.invoke=function(a,c){var d=i.call(arguments,2);return b.map(a,function(a){return(b.isFunction(c)?c||a:a[c]).apply(a,d)})};b.pluck=
function(a,c){return b.map(a,function(a){return a[c]})};b.max=function(a,c,d){if(!c&&b.isArray(a)&&a[0]===+a[0])return Math.max.apply(Math,a);if(!c&&b.isEmpty(a))return-Infinity;var e={computed:-Infinity};j(a,function(a,b,h){b=c?c.call(d,a,b,h):a;b>=e.computed&&(e={value:a,computed:b})});return e.value};b.min=function(a,c,d){if(!c&&b.isArray(a)&&a[0]===+a[0])return Math.min.apply(Math,a);if(!c&&b.isEmpty(a))return Infinity;var e={computed:Infinity};j(a,function(a,b,h){b=c?c.call(d,a,b,h):a;b<e.computed&&
(e={value:a,computed:b})});return e.value};b.shuffle=function(a){var b=[],d;j(a,function(a,f){d=Math.floor(Math.random()*(f+1));b[f]=b[d];b[d]=a});return b};b.sortBy=function(a,c,d){var e=b.isFunction(c)?c:function(a){return a[c]};return b.pluck(b.map(a,function(a,b,c){return{value:a,criteria:e.call(d,a,b,c)}}).sort(function(a,b){var c=a.criteria,d=b.criteria;return c===void 0?1:d===void 0?-1:c<d?-1:c>d?1:0}),"value")};b.groupBy=function(a,c){var d={},e=b.isFunction(c)?c:function(a){return a[c]};
j(a,function(a,b){var c=e(a,b);(d[c]||(d[c]=[])).push(a)});return d};b.sortedIndex=function(a,c,d){d||(d=b.identity);for(var e=0,f=a.length;e<f;){var g=e+f>>1;d(a[g])<d(c)?e=g+1:f=g}return e};b.toArray=function(a){return!a?[]:b.isArray(a)||b.isArguments(a)?i.call(a):a.toArray&&b.isFunction(a.toArray)?a.toArray():b.values(a)};b.size=function(a){return b.isArray(a)?a.length:b.keys(a).length};b.first=b.head=b.take=function(a,b,d){return b!=null&&!d?i.call(a,0,b):a[0]};b.initial=function(a,b,d){return i.call(a,
0,a.length-(b==null||d?1:b))};b.last=function(a,b,d){return b!=null&&!d?i.call(a,Math.max(a.length-b,0)):a[a.length-1]};b.rest=b.tail=function(a,b,d){return i.call(a,b==null||d?1:b)};b.compact=function(a){return b.filter(a,function(a){return!!a})};b.flatten=function(a,c){return b.reduce(a,function(a,e){if(b.isArray(e))return a.concat(c?e:b.flatten(e));a[a.length]=e;return a},[])};b.without=function(a){return b.difference(a,i.call(arguments,1))};b.uniq=b.unique=function(a,c,d){var d=d?b.map(a,d):a,
e=[];a.length<3&&(c=true);b.reduce(d,function(d,g,h){if(c?b.last(d)!==g||!d.length:!b.include(d,g)){d.push(g);e.push(a[h])}return d},[]);return e};b.union=function(){return b.uniq(b.flatten(arguments,true))};b.intersection=b.intersect=function(a){var c=i.call(arguments,1);return b.filter(b.uniq(a),function(a){return b.every(c,function(c){return b.indexOf(c,a)>=0})})};b.difference=function(a){var c=b.flatten(i.call(arguments,1),true);return b.filter(a,function(a){return!b.include(c,a)})};b.zip=function(){for(var a=
i.call(arguments),c=b.max(b.pluck(a,"length")),d=Array(c),e=0;e<c;e++)d[e]=b.pluck(a,""+e);return d};b.indexOf=function(a,c,d){if(a==null)return-1;var e;if(d){d=b.sortedIndex(a,c);return a[d]===c?d:-1}if(q&&a.indexOf===q)return a.indexOf(c);d=0;for(e=a.length;d<e;d++)if(d in a&&a[d]===c)return d;return-1};b.lastIndexOf=function(a,b){if(a==null)return-1;if(F&&a.lastIndexOf===F)return a.lastIndexOf(b);for(var d=a.length;d--;)if(d in a&&a[d]===b)return d;return-1};b.range=function(a,b,d){if(arguments.length<=
1){b=a||0;a=0}for(var d=arguments[2]||1,e=Math.max(Math.ceil((b-a)/d),0),f=0,g=Array(e);f<e;){g[f++]=a;a=a+d}return g};var H=function(){};b.bind=function(a,c){var d,e;if(a.bind===t&&t)return t.apply(a,i.call(arguments,1));if(!b.isFunction(a))throw new TypeError;e=i.call(arguments,2);return d=function(){if(!(this instanceof d))return a.apply(c,e.concat(i.call(arguments)));H.prototype=a.prototype;var b=new H,g=a.apply(b,e.concat(i.call(arguments)));return Object(g)===g?g:b}};b.bindAll=function(a){var c=
i.call(arguments,1);c.length==0&&(c=b.functions(a));j(c,function(c){a[c]=b.bind(a[c],a)});return a};b.memoize=function(a,c){var d={};c||(c=b.identity);return function(){var e=c.apply(this,arguments);return b.has(d,e)?d[e]:d[e]=a.apply(this,arguments)}};b.delay=function(a,b){var d=i.call(arguments,2);return setTimeout(function(){return a.apply(null,d)},b)};b.defer=function(a){return b.delay.apply(b,[a,1].concat(i.call(arguments,1)))};b.throttle=function(a,c){var d,e,f,g,h,i,j=b.debounce(function(){h=
g=false},c);return function(){d=this;e=arguments;f||(f=setTimeout(function(){f=null;h&&a.apply(d,e);j()},c));g?h=true:i=a.apply(d,e);j();g=true;return i}};b.debounce=function(a,b,d){var e;return function(){var f=this,g=arguments;d&&!e&&a.apply(f,g);clearTimeout(e);e=setTimeout(function(){e=null;d||a.apply(f,g)},b)}};b.once=function(a){var b=false,d;return function(){if(b)return d;b=true;return d=a.apply(this,arguments)}};b.wrap=function(a,b){return function(){var d=[a].concat(i.call(arguments,0));
return b.apply(this,d)}};b.compose=function(){var a=arguments;return function(){for(var b=arguments,d=a.length-1;d>=0;d--)b=[a[d].apply(this,b)];return b[0]}};b.after=function(a,b){return a<=0?b():function(){if(--a<1)return b.apply(this,arguments)}};b.keys=L||function(a){if(a!==Object(a))throw new TypeError("Invalid object");var c=[],d;for(d in a)b.has(a,d)&&(c[c.length]=d);return c};b.values=function(a){return b.map(a,b.identity)};b.functions=b.methods=function(a){var c=[],d;for(d in a)b.isFunction(a[d])&&
c.push(d);return c.sort()};b.extend=function(a){j(i.call(arguments,1),function(b){for(var d in b)a[d]=b[d]});return a};b.pick=function(a){var c={};j(b.flatten(i.call(arguments,1)),function(b){b in a&&(c[b]=a[b])});return c};b.defaults=function(a){j(i.call(arguments,1),function(b){for(var d in b)a[d]==null&&(a[d]=b[d])});return a};b.clone=function(a){return!b.isObject(a)?a:b.isArray(a)?a.slice():b.extend({},a)};b.tap=function(a,b){b(a);return a};b.isEqual=function(a,b){return r(a,b,[])};b.isEmpty=
function(a){if(a==null)return true;if(b.isArray(a)||b.isString(a))return a.length===0;for(var c in a)if(b.has(a,c))return false;return true};b.isElement=function(a){return!!(a&&a.nodeType==1)};b.isArray=p||function(a){return l.call(a)=="[object Array]"};b.isObject=function(a){return a===Object(a)};b.isArguments=function(a){return l.call(a)=="[object Arguments]"};b.isArguments(arguments)||(b.isArguments=function(a){return!(!a||!b.has(a,"callee"))});b.isFunction=function(a){return l.call(a)=="[object Function]"};
b.isString=function(a){return l.call(a)=="[object String]"};b.isNumber=function(a){return l.call(a)=="[object Number]"};b.isFinite=function(a){return b.isNumber(a)&&isFinite(a)};b.isNaN=function(a){return a!==a};b.isBoolean=function(a){return a===true||a===false||l.call(a)=="[object Boolean]"};b.isDate=function(a){return l.call(a)=="[object Date]"};b.isRegExp=function(a){return l.call(a)=="[object RegExp]"};b.isNull=function(a){return a===null};b.isUndefined=function(a){return a===void 0};b.has=function(a,
b){return K.call(a,b)};b.noConflict=function(){s._=I;return this};b.identity=function(a){return a};b.times=function(a,b,d){for(var e=0;e<a;e++)b.call(d,e)};b.escape=function(a){return(""+a).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;").replace(/\//g,"&#x2F;")};b.result=function(a,c){if(a==null)return null;var d=a[c];return b.isFunction(d)?d.call(a):d};b.mixin=function(a){j(b.functions(a),function(c){M(c,b[c]=a[c])})};var N=0;b.uniqueId=
function(a){var b=N++;return a?a+b:b};b.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var u=/.^/,n={"\\":"\\","'":"'",r:"\r",n:"\n",t:"\t",u2028:"\u2028",u2029:"\u2029"},v;for(v in n)n[n[v]]=v;var O=/\\|'|\r|\n|\t|\u2028|\u2029/g,P=/\\(\\|'|r|n|t|u2028|u2029)/g,w=function(a){return a.replace(P,function(a,b){return n[b]})};b.template=function(a,c,d){d=b.defaults(d||{},b.templateSettings);a="__p+='"+a.replace(O,function(a){return"\\"+n[a]}).replace(d.escape||
u,function(a,b){return"'+\n_.escape("+w(b)+")+\n'"}).replace(d.interpolate||u,function(a,b){return"'+\n("+w(b)+")+\n'"}).replace(d.evaluate||u,function(a,b){return"';\n"+w(b)+"\n;__p+='"})+"';\n";d.variable||(a="with(obj||{}){\n"+a+"}\n");var a="var __p='';var print=function(){__p+=Array.prototype.join.call(arguments, '')};\n"+a+"return __p;\n",e=new Function(d.variable||"obj","_",a);if(c)return e(c,b);c=function(a){return e.call(this,a,b)};c.source="function("+(d.variable||"obj")+"){\n"+a+"}";return c};
b.chain=function(a){return b(a).chain()};var m=function(a){this._wrapped=a};b.prototype=m.prototype;var x=function(a,c){return c?b(a).chain():a},M=function(a,c){m.prototype[a]=function(){var a=i.call(arguments);J.call(a,this._wrapped);return x(c.apply(b,a),this._chain)}};b.mixin(b);j("pop,push,reverse,shift,sort,splice,unshift".split(","),function(a){var b=k[a];m.prototype[a]=function(){var d=this._wrapped;b.apply(d,arguments);var e=d.length;(a=="shift"||a=="splice")&&e===0&&delete d[0];return x(d,
this._chain)}});j(["concat","join","slice"],function(a){var b=k[a];m.prototype[a]=function(){return x(b.apply(this._wrapped,arguments),this._chain)}});m.prototype.chain=function(){this._chain=true;return this};m.prototype.value=function(){return this._wrapped}}).call(this);

// moment.js
// version : 1.7.2
// author : Tim Wood
// license : MIT
// momentjs.com
(function(a){function E(a,b,c,d){var e=c.lang();return e[a].call?e[a](c,d):e[a][b]}function F(a,b){return function(c){return K(a.call(this,c),b)}}function G(a){return function(b){var c=a.call(this,b);return c+this.lang().ordinal(c)}}function H(a,b,c){this._d=a,this._isUTC=!!b,this._a=a._a||null,this._lang=c||!1}function I(a){var b=this._data={},c=a.years||a.y||0,d=a.months||a.M||0,e=a.weeks||a.w||0,f=a.days||a.d||0,g=a.hours||a.h||0,h=a.minutes||a.m||0,i=a.seconds||a.s||0,j=a.milliseconds||a.ms||0;this._milliseconds=j+i*1e3+h*6e4+g*36e5,this._days=f+e*7,this._months=d+c*12,b.milliseconds=j%1e3,i+=J(j/1e3),b.seconds=i%60,h+=J(i/60),b.minutes=h%60,g+=J(h/60),b.hours=g%24,f+=J(g/24),f+=e*7,b.days=f%30,d+=J(f/30),b.months=d%12,c+=J(d/12),b.years=c,this._lang=!1}function J(a){return a<0?Math.ceil(a):Math.floor(a)}function K(a,b){var c=a+"";while(c.length<b)c="0"+c;return c}function L(a,b,c){var d=b._milliseconds,e=b._days,f=b._months,g;d&&a._d.setTime(+a+d*c),e&&a.date(a.date()+e*c),f&&(g=a.date(),a.date(1).month(a.month()+f*c).date(Math.min(g,a.daysInMonth())))}function M(a){return Object.prototype.toString.call(a)==="[object Array]"}function N(a,b){var c=Math.min(a.length,b.length),d=Math.abs(a.length-b.length),e=0,f;for(f=0;f<c;f++)~~a[f]!==~~b[f]&&e++;return e+d}function O(a,b,c,d){var e,f,g=[];for(e=0;e<7;e++)g[e]=a[e]=a[e]==null?e===2?1:0:a[e];return a[7]=g[7]=b,a[8]!=null&&(g[8]=a[8]),a[3]+=c||0,a[4]+=d||0,f=new Date(0),b?(f.setUTCFullYear(a[0],a[1],a[2]),f.setUTCHours(a[3],a[4],a[5],a[6])):(f.setFullYear(a[0],a[1],a[2]),f.setHours(a[3],a[4],a[5],a[6])),f._a=g,f}function P(a,c){var d,e,g=[];!c&&h&&(c=require("./lang/"+a));for(d=0;d<i.length;d++)c[i[d]]=c[i[d]]||f.en[i[d]];for(d=0;d<12;d++)e=b([2e3,d]),g[d]=new RegExp("^"+(c.months[d]||c.months(e,""))+"|^"+(c.monthsShort[d]||c.monthsShort(e,"")).replace(".",""),"i");return c.monthsParse=c.monthsParse||g,f[a]=c,c}function Q(a){var c=typeof a=="string"&&a||a&&a._lang||null;return c?f[c]||P(c):b}function R(a){return a.match(/\[.*\]/)?a.replace(/^\[|\]$/g,""):a.replace(/\\/g,"")}function S(a){var b=a.match(k),c,d;for(c=0,d=b.length;c<d;c++)D[b[c]]?b[c]=D[b[c]]:b[c]=R(b[c]);return function(e){var f="";for(c=0;c<d;c++)f+=typeof b[c].call=="function"?b[c].call(e,a):b[c];return f}}function T(a,b){function d(b){return a.lang().longDateFormat[b]||b}var c=5;while(c--&&l.test(b))b=b.replace(l,d);return A[b]||(A[b]=S(b)),A[b](a)}function U(a){switch(a){case"DDDD":return p;case"YYYY":return q;case"S":case"SS":case"SSS":case"DDD":return o;case"MMM":case"MMMM":case"dd":case"ddd":case"dddd":case"a":case"A":return r;case"Z":case"ZZ":return s;case"T":return t;case"MM":case"DD":case"YY":case"HH":case"hh":case"mm":case"ss":case"M":case"D":case"d":case"H":case"h":case"m":case"s":return n;default:return new RegExp(a.replace("\\",""))}}function V(a,b,c,d){var e,f;switch(a){case"M":case"MM":c[1]=b==null?0:~~b-1;break;case"MMM":case"MMMM":for(e=0;e<12;e++)if(Q().monthsParse[e].test(b)){c[1]=e,f=!0;break}f||(c[8]=!1);break;case"D":case"DD":case"DDD":case"DDDD":b!=null&&(c[2]=~~b);break;case"YY":c[0]=~~b+(~~b>70?1900:2e3);break;case"YYYY":c[0]=~~Math.abs(b);break;case"a":case"A":d.isPm=(b+"").toLowerCase()==="pm";break;case"H":case"HH":case"h":case"hh":c[3]=~~b;break;case"m":case"mm":c[4]=~~b;break;case"s":case"ss":c[5]=~~b;break;case"S":case"SS":case"SSS":c[6]=~~(("0."+b)*1e3);break;case"Z":case"ZZ":d.isUTC=!0,e=(b+"").match(x),e&&e[1]&&(d.tzh=~~e[1]),e&&e[2]&&(d.tzm=~~e[2]),e&&e[0]==="+"&&(d.tzh=-d.tzh,d.tzm=-d.tzm)}b==null&&(c[8]=!1)}function W(a,b){var c=[0,0,1,0,0,0,0],d={tzh:0,tzm:0},e=b.match(k),f,g;for(f=0;f<e.length;f++)g=(U(e[f]).exec(a)||[])[0],g&&(a=a.slice(a.indexOf(g)+g.length)),D[e[f]]&&V(e[f],g,c,d);return d.isPm&&c[3]<12&&(c[3]+=12),d.isPm===!1&&c[3]===12&&(c[3]=0),O(c,d.isUTC,d.tzh,d.tzm)}function X(a,b){var c,d=a.match(m)||[],e,f=99,g,h,i;for(g=0;g<b.length;g++)h=W(a,b[g]),e=T(new H(h),b[g]).match(m)||[],i=N(d,e),i<f&&(f=i,c=h);return c}function Y(a){var b="YYYY-MM-DDT",c;if(u.exec(a)){for(c=0;c<4;c++)if(w[c][1].exec(a)){b+=w[c][0];break}return s.exec(a)?W(a,b+" Z"):W(a,b)}return new Date(a)}function Z(a,b,c,d,e){var f=e.relativeTime[a];return typeof f=="function"?f(b||1,!!c,a,d):f.replace(/%d/i,b||1)}function $(a,b,c){var e=d(Math.abs(a)/1e3),f=d(e/60),g=d(f/60),h=d(g/24),i=d(h/365),j=e<45&&["s",e]||f===1&&["m"]||f<45&&["mm",f]||g===1&&["h"]||g<22&&["hh",g]||h===1&&["d"]||h<=25&&["dd",h]||h<=45&&["M"]||h<345&&["MM",d(h/30)]||i===1&&["y"]||["yy",i];return j[2]=b,j[3]=a>0,j[4]=c,Z.apply({},j)}function _(a,c){b.fn[a]=function(a){var b=this._isUTC?"UTC":"";return a!=null?(this._d["set"+b+c](a),this):this._d["get"+b+c]()}}function ab(a){b.duration.fn[a]=function(){return this._data[a]}}function bb(a,c){b.duration.fn["as"+a]=function(){return+this/c}}var b,c="1.7.2",d=Math.round,e,f={},g="en",h=typeof module!="undefined"&&module.exports,i="months|monthsShort|weekdays|weekdaysShort|weekdaysMin|longDateFormat|calendar|relativeTime|ordinal|meridiem".split("|"),j=/^\/?Date\((\-?\d+)/i,k=/(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|YYYY|YY|a|A|hh?|HH?|mm?|ss?|SS?S?|zz?|ZZ?|.)/g,l=/(\[[^\[]*\])|(\\)?(LT|LL?L?L?)/g,m=/([0-9a-zA-Z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+)/gi,n=/\d\d?/,o=/\d{1,3}/,p=/\d{3}/,q=/\d{1,4}/,r=/[0-9a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+/i,s=/Z|[\+\-]\d\d:?\d\d/i,t=/T/i,u=/^\s*\d{4}-\d\d-\d\d(T(\d\d(:\d\d(:\d\d(\.\d\d?\d?)?)?)?)?([\+\-]\d\d:?\d\d)?)?/,v="YYYY-MM-DDTHH:mm:ssZ",w=[["HH:mm:ss.S",/T\d\d:\d\d:\d\d\.\d{1,3}/],["HH:mm:ss",/T\d\d:\d\d:\d\d/],["HH:mm",/T\d\d:\d\d/],["HH",/T\d\d/]],x=/([\+\-]|\d\d)/gi,y="Month|Date|Hours|Minutes|Seconds|Milliseconds".split("|"),z={Milliseconds:1,Seconds:1e3,Minutes:6e4,Hours:36e5,Days:864e5,Months:2592e6,Years:31536e6},A={},B="DDD w M D d".split(" "),C="M D H h m s w".split(" "),D={M:function(){return this.month()+1},MMM:function(a){return E("monthsShort",this.month(),this,a)},MMMM:function(a){return E("months",this.month(),this,a)},D:function(){return this.date()},DDD:function(){var a=new Date(this.year(),this.month(),this.date()),b=new Date(this.year(),0,1);return~~((a-b)/864e5+1.5)},d:function(){return this.day()},dd:function(a){return E("weekdaysMin",this.day(),this,a)},ddd:function(a){return E("weekdaysShort",this.day(),this,a)},dddd:function(a){return E("weekdays",this.day(),this,a)},w:function(){var a=new Date(this.year(),this.month(),this.date()-this.day()+5),b=new Date(a.getFullYear(),0,4);return~~((a-b)/864e5/7+1.5)},YY:function(){return K(this.year()%100,2)},YYYY:function(){return K(this.year(),4)},a:function(){return this.lang().meridiem(this.hours(),this.minutes(),!0)},A:function(){return this.lang().meridiem(this.hours(),this.minutes(),!1)},H:function(){return this.hours()},h:function(){return this.hours()%12||12},m:function(){return this.minutes()},s:function(){return this.seconds()},S:function(){return~~(this.milliseconds()/100)},SS:function(){return K(~~(this.milliseconds()/10),2)},SSS:function(){return K(this.milliseconds(),3)},Z:function(){var a=-this.zone(),b="+";return a<0&&(a=-a,b="-"),b+K(~~(a/60),2)+":"+K(~~a%60,2)},ZZ:function(){var a=-this.zone(),b="+";return a<0&&(a=-a,b="-"),b+K(~~(10*a/6),4)}};while(B.length)e=B.pop(),D[e+"o"]=G(D[e]);while(C.length)e=C.pop(),D[e+e]=F(D[e],2);D.DDDD=F(D.DDD,3),b=function(c,d){if(c===null||c==="")return null;var e,f;return b.isMoment(c)?new H(new Date(+c._d),c._isUTC,c._lang):(d?M(d)?e=X(c,d):e=W(c,d):(f=j.exec(c),e=c===a?new Date:f?new Date(+f[1]):c instanceof Date?c:M(c)?O(c):typeof c=="string"?Y(c):new Date(c)),new H(e))},b.utc=function(a,c){return M(a)?new H(O(a,!0),!0):(typeof a=="string"&&!s.exec(a)&&(a+=" +0000",c&&(c+=" Z")),b(a,c).utc())},b.unix=function(a){return b(a*1e3)},b.duration=function(a,c){var d=b.isDuration(a),e=typeof a=="number",f=d?a._data:e?{}:a,g;return e&&(c?f[c]=a:f.milliseconds=a),g=new I(f),d&&(g._lang=a._lang),g},b.humanizeDuration=function(a,c,d){return b.duration(a,c===!0?null:c).humanize(c===!0?!0:d)},b.version=c,b.defaultFormat=v,b.lang=function(a,c){var d;if(!a)return g;(c||!f[a])&&P(a,c);if(f[a]){for(d=0;d<i.length;d++)b[i[d]]=f[a][i[d]];b.monthsParse=f[a].monthsParse,g=a}},b.langData=Q,b.isMoment=function(a){return a instanceof H},b.isDuration=function(a){return a instanceof I},b.lang("en",{months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),longDateFormat:{LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D YYYY",LLL:"MMMM D YYYY LT",LLLL:"dddd, MMMM D YYYY LT"},meridiem:function(a,b,c){return a>11?c?"pm":"PM":c?"am":"AM"},calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[last] dddd [at] LT",sameElse:"L"},relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},ordinal:function(a){var b=a%10;return~~(a%100/10)===1?"th":b===1?"st":b===2?"nd":b===3?"rd":"th"}}),b.fn=H.prototype={clone:function(){return b(this)},valueOf:function(){return+this._d},unix:function(){return Math.floor(+this._d/1e3)},toString:function(){return this._d.toString()},toDate:function(){return this._d},toArray:function(){var a=this;return[a.year(),a.month(),a.date(),a.hours(),a.minutes(),a.seconds(),a.milliseconds(),!!this._isUTC]},isValid:function(){return this._a?this._a[8]!=null?!!this._a[8]:!N(this._a,(this._a[7]?b.utc(this._a):b(this._a)).toArray()):!isNaN(this._d.getTime())},utc:function(){return this._isUTC=!0,this},local:function(){return this._isUTC=!1,this},format:function(a){return T(this,a?a:b.defaultFormat)},add:function(a,c){var d=c?b.duration(+c,a):b.duration(a);return L(this,d,1),this},subtract:function(a,c){var d=c?b.duration(+c,a):b.duration(a);return L(this,d,-1),this},diff:function(a,c,e){var f=this._isUTC?b(a).utc():b(a).local(),g=(this.zone()-f.zone())*6e4,h=this._d-f._d-g,i=this.year()-f.year(),j=this.month()-f.month(),k=this.date()-f.date(),l;return c==="months"?l=i*12+j+k/30:c==="years"?l=i+(j+k/30)/12:l=c==="seconds"?h/1e3:c==="minutes"?h/6e4:c==="hours"?h/36e5:c==="days"?h/864e5:c==="weeks"?h/6048e5:h,e?l:d(l)},from:function(a,c){return b.duration(this.diff(a)).lang(this._lang).humanize(!c)},fromNow:function(a){return this.from(b(),a)},calendar:function(){var a=this.diff(b().sod(),"days",!0),c=this.lang().calendar,d=c.sameElse,e=a<-6?d:a<-1?c.lastWeek:a<0?c.lastDay:a<1?c.sameDay:a<2?c.nextDay:a<7?c.nextWeek:d;return this.format(typeof e=="function"?e.apply(this):e)},isLeapYear:function(){var a=this.year();return a%4===0&&a%100!==0||a%400===0},isDST:function(){return this.zone()<b([this.year()]).zone()||this.zone()<b([this.year(),5]).zone()},day:function(a){var b=this._isUTC?this._d.getUTCDay():this._d.getDay();return a==null?b:this.add({d:a-b})},startOf:function(a){switch(a.replace(/s$/,"")){case"year":this.month(0);case"month":this.date(1);case"day":this.hours(0);case"hour":this.minutes(0);case"minute":this.seconds(0);case"second":this.milliseconds(0)}return this},endOf:function(a){return this.startOf(a).add(a.replace(/s?$/,"s"),1).subtract("ms",1)},sod:function(){return this.clone().startOf("day")},eod:function(){return this.clone().endOf("day")},zone:function(){return this._isUTC?0:this._d.getTimezoneOffset()},daysInMonth:function(){return b.utc([this.year(),this.month()+1,0]).date()},lang:function(b){return b===a?Q(this):(this._lang=b,this)}};for(e=0;e<y.length;e++)_(y[e].toLowerCase(),y[e]);_("year","FullYear"),b.duration.fn=I.prototype={weeks:function(){return J(this.days()/7)},valueOf:function(){return this._milliseconds+this._days*864e5+this._months*2592e6},humanize:function(a){var b=+this,c=this.lang().relativeTime,d=$(b,!a,this.lang()),e=b<=0?c.past:c.future;return a&&(typeof e=="function"?d=e(d):d=e.replace(/%s/i,d)),d},lang:b.fn.lang};for(e in z)z.hasOwnProperty(e)&&(bb(e,z[e]),ab(e.toLowerCase()));bb("Weeks",6048e5),h&&(module.exports=b),typeof ender=="undefined"&&(this.moment=b),typeof define=="function"&&define.amd&&define("moment",[],function(){return b})}).call(this);
/**
 * Timeago is a jQuery plugin that makes it easy to support automatically
 * updating fuzzy timestamps (e.g. "4 minutes ago" or "about 1 day ago").
 *
 * @name timeago
 * @version 0.11.4
 * @requires jQuery v1.2.3+
 * @author Ryan McGeary
 * @license MIT License - http://www.opensource.org/licenses/mit-license.php
 *
 * For usage and examples, visit:
 * http://timeago.yarp.com/
 *
 * Copyright (c) 2008-2012, Ryan McGeary (ryan -[at]- mcgeary [*dot*] org)
 */
(function($) {
  $.timeago = function(timestamp) {
    if (timestamp instanceof Date) {
      return inWords(timestamp);
    } else if (typeof timestamp === "string") {
      return inWords($.timeago.parse(timestamp));
    } else if (typeof timestamp === "number") {
      return inWords(new Date(timestamp));
    } else {
      return inWords($.timeago.datetime(timestamp));
    }
  };
  var $t = $.timeago;

  $.extend($.timeago, {
    settings: {
      refreshMillis: 60000,
      allowFuture: false,
      strings: {
        prefixAgo: null,
        prefixFromNow: null,
        suffixAgo: "ago",
        suffixFromNow: "from now",
        seconds: "less than a minute",
        minute: "about a minute",
        minutes: "%d minutes",
        hour: "about an hour",
        hours: "about %d hours",
        day: "a day",
        days: "%d days",
        month: "about a month",
        months: "%d months",
        year: "about a year",
        years: "%d years",
        wordSeparator: " ",
        numbers: []
      }
    },
    inWords: function(distanceMillis) {
      var $l = this.settings.strings;
      var prefix = $l.prefixAgo;
      var suffix = $l.suffixAgo;
      if (this.settings.allowFuture) {
        if (distanceMillis < 0) {
          prefix = $l.prefixFromNow;
          suffix = $l.suffixFromNow;
        }
      }

      var seconds = Math.abs(distanceMillis) / 1000;
      var minutes = seconds / 60;
      var hours = minutes / 60;
      var days = hours / 24;
      var years = days / 365;

      function substitute(stringOrFunction, number) {
        var string = $.isFunction(stringOrFunction) ? stringOrFunction(number, distanceMillis) : stringOrFunction;
        var value = ($l.numbers && $l.numbers[number]) || number;
        return string.replace(/%d/i, value);
      }

      var words = seconds < 45 && substitute($l.seconds, Math.round(seconds)) ||
        seconds < 90 && substitute($l.minute, 1) ||
        minutes < 45 && substitute($l.minutes, Math.round(minutes)) ||
        minutes < 90 && substitute($l.hour, 1) ||
        hours < 24 && substitute($l.hours, Math.round(hours)) ||
        hours < 42 && substitute($l.day, 1) ||
        days < 30 && substitute($l.days, Math.round(days)) ||
        days < 45 && substitute($l.month, 1) ||
        days < 365 && substitute($l.months, Math.round(days / 30)) ||
        years < 1.5 && substitute($l.year, 1) ||
        substitute($l.years, Math.round(years));

      var separator = $l.wordSeparator === undefined ?  " " : $l.wordSeparator;
      return $.trim([prefix, words, suffix].join(separator));
    },
    parse: function(iso8601) {
      var s = $.trim(iso8601);
      s = s.replace(/\.\d+/,""); // remove milliseconds
      s = s.replace(/-/,"/").replace(/-/,"/");
      s = s.replace(/T/," ").replace(/Z/," UTC");
      s = s.replace(/([\+\-]\d\d)\:?(\d\d)/," $1$2"); // -04:00 -> -0400
      return new Date(s);
    },
    datetime: function(elem) {
      var iso8601 = $t.isTime(elem) ? $(elem).attr("datetime") : $(elem).attr("title");
      return $t.parse(iso8601);
    },
    isTime: function(elem) {
      // jQuery's `is()` doesn't play well with HTML5 in IE
      return $(elem).get(0).tagName.toLowerCase() === "time"; // $(elem).is("time");
    }
  });

  $.fn.timeago = function() {
    var self = this;
    self.each(refresh);

    var $s = $t.settings;
    if ($s.refreshMillis > 0) {
      setInterval(function() { self.each(refresh); }, $s.refreshMillis);
    }
    return self;
  };

  function refresh() {
    var data = prepareData(this);
    if (!isNaN(data.datetime)) {
      $(this).text(inWords(data.datetime));
    }
    return this;
  }

  function prepareData(element) {
    element = $(element);
    if (!element.data("timeago")) {
      element.data("timeago", { datetime: $t.datetime(element) });
      var text = $.trim(element.text());
      if (text.length > 0 && !($t.isTime(element) && element.attr("title"))) {
        element.attr("title", text);
      }
    }
    return element.data("timeago");
  }

  function inWords(date) {
    return $t.inWords(distance(date));
  }

  function distance(date) {
    return (new Date().getTime() - date.getTime());
  }

  // fix for IE6 suckage
  document.createElement("abbr");
  document.createElement("time");
}(jQuery));

/**
 * jQuery touch click - v1.0 - 4/22/2012
 * https://github.com/pesblog/jquery-touch-click
 *
 * Copyright (c) 2012 "pesblog" Noritak Baba
 * Licensed under the MIT licenses.
 */

// About: Examples
// https://github.com/pesblog/jquery-touch-click/blob/master/examples/index.html

;(function ( $, window, undefined ) {

    var pluginName = 'touchClick';
    var defaults = {
    	className: 'spinner',
        callback: function(){
            console.log('touchClick');
        }
    };

    var isTouch = ('ontouchend' in window);
    var touchstartEvent = isTouch ? 'touchstart.'+pluginName : 'mousedown.'+pluginName;
    var touchmoveEvent = isTouch ? 'touchmove.'+pluginName : 'mousemove.'+pluginName;
    var touchendEvent = isTouch ? 'touchend.'+pluginName : 'mouseup.'+pluginName;

    function Plugin( element, className, callback ) {
	    this.element = element;
        if (typeof className === 'function'){
            this.options = {};
            this.options.className = defaults.className;
            this.options.callback = className;
        } else {
            this.options = {
                className: className || defaults.className,
                callback: callback || defaults.callback
            };
        }
	    this._defaults = defaults;
	    this._name = pluginName;
	    this.init();
    }

    Plugin.prototype.init = function () {
        var self = this;
        var $element = $(self.element);
        var className = self.options.className;
        var callback = self.options.callback;
        $element
            .bind(touchstartEvent, function(e) {
                this.touchClickStart = true;
                $element.addClass( className );
            })
            .bind(touchmoveEvent, function(e) {
                if ( this.touchClickStart ) {
                    this.touchClickStart = undefined;
                    // $element.removeClass( className );
                }
            })
            .bind(touchendEvent, function(e) {
                var dom = this;
                if ( this.touchClickStart ) {
                    this.touchClickStart = undefined;
                    // $element.removeClass( className );
                    setTimeout(function(){
                        $.proxy(callback, dom)(e)
                    }, 0);
                }
            });
    };

    $.fn[pluginName] = function ( className, callback ) {
	    return this.each(function () {
	        if (!$.data(this, 'plugin_' + pluginName)) {
		        $.data(this, 'plugin_' + pluginName,
		               new Plugin( this, className, callback ));
	        }
	    });
    };

})( jQuery, window );

/*!
* Bootstrap.js by @fat & @mdo
* Copyright 2012 Twitter, Inc.
* http://www.apache.org/licenses/LICENSE-2.0.txt
*/
!function(e){e(function(){"use strict";e.support.transition=function(){var e=function(){var e=document.createElement("bootstrap"),t={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"},n;for(n in t)if(e.style[n]!==undefined)return t[n]}();return e&&{end:e}}()})}(window.jQuery),!function(e){"use strict";var t='[data-dismiss="alert"]',n=function(n){e(n).on("click",t,this.close)};n.prototype.close=function(t){function s(){i.trigger("closed").remove()}var n=e(this),r=n.attr("data-target"),i;r||(r=n.attr("href"),r=r&&r.replace(/.*(?=#[^\s]*$)/,"")),i=e(r),t&&t.preventDefault(),i.length||(i=n.hasClass("alert")?n:n.parent()),i.trigger(t=e.Event("close"));if(t.isDefaultPrevented())return;i.removeClass("in"),e.support.transition&&i.hasClass("fade")?i.on(e.support.transition.end,s):s()},e.fn.alert=function(t){return this.each(function(){var r=e(this),i=r.data("alert");i||r.data("alert",i=new n(this)),typeof t=="string"&&i[t].call(r)})},e.fn.alert.Constructor=n,e(function(){e("body").on("click.alert.data-api",t,n.prototype.close)})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=e.extend({},e.fn.button.defaults,n)};t.prototype.setState=function(e){var t="disabled",n=this.$element,r=n.data(),i=n.is("input")?"val":"html";e+="Text",r.resetText||n.data("resetText",n[i]()),n[i](r[e]||this.options[e]),setTimeout(function(){e=="loadingText"?n.addClass(t).attr(t,t):n.removeClass(t).removeAttr(t)},0)},t.prototype.toggle=function(){var e=this.$element.closest('[data-toggle="buttons-radio"]');e&&e.find(".active").removeClass("active"),this.$element.toggleClass("active")},e.fn.button=function(n){return this.each(function(){var r=e(this),i=r.data("button"),s=typeof n=="object"&&n;i||r.data("button",i=new t(this,s)),n=="toggle"?i.toggle():n&&i.setState(n)})},e.fn.button.defaults={loadingText:"loading..."},e.fn.button.Constructor=t,e(function(){e("body").on("click.button.data-api","[data-toggle^=button]",function(t){var n=e(t.target);n.hasClass("btn")||(n=n.closest(".btn")),n.button("toggle")})})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=n,this.options.slide&&this.slide(this.options.slide),this.options.pause=="hover"&&this.$element.on("mouseenter",e.proxy(this.pause,this)).on("mouseleave",e.proxy(this.cycle,this))};t.prototype={cycle:function(t){return t||(this.paused=!1),this.options.interval&&!this.paused&&(this.interval=setInterval(e.proxy(this.next,this),this.options.interval)),this},to:function(t){var n=this.$element.find(".item.active"),r=n.parent().children(),i=r.index(n),s=this;if(t>r.length-1||t<0)return;return this.sliding?this.$element.one("slid",function(){s.to(t)}):i==t?this.pause().cycle():this.slide(t>i?"next":"prev",e(r[t]))},pause:function(t){return t||(this.paused=!0),this.$element.find(".next, .prev").length&&e.support.transition.end&&(this.$element.trigger(e.support.transition.end),this.cycle()),clearInterval(this.interval),this.interval=null,this},next:function(){if(this.sliding)return;return this.slide("next")},prev:function(){if(this.sliding)return;return this.slide("prev")},slide:function(t,n){var r=this.$element.find(".item.active"),i=n||r[t](),s=this.interval,o=t=="next"?"left":"right",u=t=="next"?"first":"last",a=this,f=e.Event("slide",{relatedTarget:i[0]});this.sliding=!0,s&&this.pause(),i=i.length?i:this.$element.find(".item")[u]();if(i.hasClass("active"))return;if(e.support.transition&&this.$element.hasClass("slide")){this.$element.trigger(f);if(f.isDefaultPrevented())return;i.addClass(t),i[0].offsetWidth,r.addClass(o),i.addClass(o),this.$element.one(e.support.transition.end,function(){i.removeClass([t,o].join(" ")).addClass("active"),r.removeClass(["active",o].join(" ")),a.sliding=!1,setTimeout(function(){a.$element.trigger("slid")},0)})}else{this.$element.trigger(f);if(f.isDefaultPrevented())return;r.removeClass("active"),i.addClass("active"),this.sliding=!1,this.$element.trigger("slid")}return s&&this.cycle(),this}},e.fn.carousel=function(n){return this.each(function(){var r=e(this),i=r.data("carousel"),s=e.extend({},e.fn.carousel.defaults,typeof n=="object"&&n),o=typeof n=="string"?n:s.slide;i||r.data("carousel",i=new t(this,s)),typeof n=="number"?i.to(n):o?i[o]():s.interval&&i.cycle()})},e.fn.carousel.defaults={interval:5e3,pause:"hover"},e.fn.carousel.Constructor=t,e(function(){e("body").on("click.carousel.data-api","[data-slide]",function(t){var n=e(this),r,i=e(n.attr("data-target")||(r=n.attr("href"))&&r.replace(/.*(?=#[^\s]+$)/,"")),s=!i.data("modal")&&e.extend({},i.data(),n.data());i.carousel(s),t.preventDefault()})})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=e.extend({},e.fn.collapse.defaults,n),this.options.parent&&(this.$parent=e(this.options.parent)),this.options.toggle&&this.toggle()};t.prototype={constructor:t,dimension:function(){var e=this.$element.hasClass("width");return e?"width":"height"},show:function(){var t,n,r,i;if(this.transitioning)return;t=this.dimension(),n=e.camelCase(["scroll",t].join("-")),r=this.$parent&&this.$parent.find("> .accordion-group > .in");if(r&&r.length){i=r.data("collapse");if(i&&i.transitioning)return;r.collapse("hide"),i||r.data("collapse",null)}this.$element[t](0),this.transition("addClass",e.Event("show"),"shown"),e.support.transition&&this.$element[t](this.$element[0][n])},hide:function(){var t;if(this.transitioning)return;t=this.dimension(),this.reset(this.$element[t]()),this.transition("removeClass",e.Event("hide"),"hidden"),this.$element[t](0)},reset:function(e){var t=this.dimension();return this.$element.removeClass("collapse")[t](e||"auto")[0].offsetWidth,this.$element[e!==null?"addClass":"removeClass"]("collapse"),this},transition:function(t,n,r){var i=this,s=function(){n.type=="show"&&i.reset(),i.transitioning=0,i.$element.trigger(r)};this.$element.trigger(n);if(n.isDefaultPrevented())return;this.transitioning=1,this.$element[t]("in"),e.support.transition&&this.$element.hasClass("collapse")?this.$element.one(e.support.transition.end,s):s()},toggle:function(){this[this.$element.hasClass("in")?"hide":"show"]()}},e.fn.collapse=function(n){return this.each(function(){var r=e(this),i=r.data("collapse"),s=typeof n=="object"&&n;i||r.data("collapse",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.collapse.defaults={toggle:!0},e.fn.collapse.Constructor=t,e(function(){e("body").on("click.collapse.data-api","[data-toggle=collapse]",function(t){var n=e(this),r,i=n.attr("data-target")||t.preventDefault()||(r=n.attr("href"))&&r.replace(/.*(?=#[^\s]+$)/,""),s=e(i).data("collapse")?"toggle":n.data();n[e(i).hasClass("in")?"addClass":"removeClass"]("collapsed"),e(i).collapse(s)})})}(window.jQuery),!function(e){"use strict";function r(){i(e(t)).removeClass("open")}function i(t){var n=t.attr("data-target"),r;return n||(n=t.attr("href"),n=n&&/#/.test(n)&&n.replace(/.*(?=#[^\s]*$)/,"")),r=e(n),r.length||(r=t.parent()),r}var t="[data-toggle=dropdown]",n=function(t){var n=e(t).on("click.dropdown.data-api",this.toggle);e("html").on("click.dropdown.data-api",function(){n.parent().removeClass("open")})};n.prototype={constructor:n,toggle:function(t){var n=e(this),s,o;if(n.is(".disabled, :disabled"))return;return s=i(n),o=s.hasClass("open"),r(),o||(s.toggleClass("open"),n.focus()),!1},keydown:function(t){var n,r,s,o,u,a;if(!/(38|40|27)/.test(t.keyCode))return;n=e(this),t.preventDefault(),t.stopPropagation();if(n.is(".disabled, :disabled"))return;o=i(n),u=o.hasClass("open");if(!u||u&&t.keyCode==27)return n.click();r=e("[role=menu] li:not(.divider) a",o);if(!r.length)return;a=r.index(r.filter(":focus")),t.keyCode==38&&a>0&&a--,t.keyCode==40&&a<r.length-1&&a++,~a||(a=0),r.eq(a).focus()}},e.fn.dropdown=function(t){return this.each(function(){var r=e(this),i=r.data("dropdown");i||r.data("dropdown",i=new n(this)),typeof t=="string"&&i[t].call(r)})},e.fn.dropdown.Constructor=n,e(function(){e("html").on("click.dropdown.data-api touchstart.dropdown.data-api",r),e("body").on("click.dropdown touchstart.dropdown.data-api",".dropdown form",function(e){e.stopPropagation()}).on("click.dropdown.data-api touchstart.dropdown.data-api",t,n.prototype.toggle).on("keydown.dropdown.data-api touchstart.dropdown.data-api",t+", [role=menu]",n.prototype.keydown)})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.options=n,this.$element=e(t).delegate('[data-dismiss="modal"]',"click.dismiss.modal",e.proxy(this.hide,this)),this.options.remote&&this.$element.find(".modal-body").load(this.options.remote)};t.prototype={constructor:t,toggle:function(){return this[this.isShown?"hide":"show"]()},show:function(){var t=this,n=e.Event("show");this.$element.trigger(n);if(this.isShown||n.isDefaultPrevented())return;e("body").addClass("modal-open"),this.isShown=!0,this.escape(),this.backdrop(function(){var n=e.support.transition&&t.$element.hasClass("fade");t.$element.parent().length||t.$element.appendTo(document.body),t.$element.show(),n&&t.$element[0].offsetWidth,t.$element.addClass("in").attr("aria-hidden",!1).focus(),t.enforceFocus(),n?t.$element.one(e.support.transition.end,function(){t.$element.trigger("shown")}):t.$element.trigger("shown")})},hide:function(t){t&&t.preventDefault();var n=this;t=e.Event("hide"),this.$element.trigger(t);if(!this.isShown||t.isDefaultPrevented())return;this.isShown=!1,e("body").removeClass("modal-open"),this.escape(),e(document).off("focusin.modal"),this.$element.removeClass("in").attr("aria-hidden",!0),e.support.transition&&this.$element.hasClass("fade")?this.hideWithTransition():this.hideModal()},enforceFocus:function(){var t=this;e(document).on("focusin.modal",function(e){t.$element[0]!==e.target&&!t.$element.has(e.target).length&&t.$element.focus()})},escape:function(){var e=this;this.isShown&&this.options.keyboard?this.$element.on("keyup.dismiss.modal",function(t){t.which==27&&e.hide()}):this.isShown||this.$element.off("keyup.dismiss.modal")},hideWithTransition:function(){var t=this,n=setTimeout(function(){t.$element.off(e.support.transition.end),t.hideModal()},500);this.$element.one(e.support.transition.end,function(){clearTimeout(n),t.hideModal()})},hideModal:function(e){this.$element.hide().trigger("hidden"),this.backdrop()},removeBackdrop:function(){this.$backdrop.remove(),this.$backdrop=null},backdrop:function(t){var n=this,r=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var i=e.support.transition&&r;this.$backdrop=e('<div class="modal-backdrop '+r+'" />').appendTo(document.body),this.options.backdrop!="static"&&this.$backdrop.click(e.proxy(this.hide,this)),i&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),i?this.$backdrop.one(e.support.transition.end,t):t()}else!this.isShown&&this.$backdrop?(this.$backdrop.removeClass("in"),e.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one(e.support.transition.end,e.proxy(this.removeBackdrop,this)):this.removeBackdrop()):t&&t()}},e.fn.modal=function(n){return this.each(function(){var r=e(this),i=r.data("modal"),s=e.extend({},e.fn.modal.defaults,r.data(),typeof n=="object"&&n);i||r.data("modal",i=new t(this,s)),typeof n=="string"?i[n]():s.show&&i.show()})},e.fn.modal.defaults={backdrop:!0,keyboard:!0,show:!0},e.fn.modal.Constructor=t,e(function(){e("body").on("click.modal.data-api",'[data-toggle="modal"]',function(t){var n=e(this),r=n.attr("href"),i=e(n.attr("data-target")||r&&r.replace(/.*(?=#[^\s]+$)/,"")),s=i.data("modal")?"toggle":e.extend({remote:!/#/.test(r)&&r},i.data(),n.data());t.preventDefault(),i.modal(s).one("hide",function(){n.focus()})})})}(window.jQuery),!function(e){"use strict";var t=function(e,t){this.init("tooltip",e,t)};t.prototype={constructor:t,init:function(t,n,r){var i,s;this.type=t,this.$element=e(n),this.options=this.getOptions(r),this.enabled=!0,this.options.trigger=="click"?this.$element.on("click."+this.type,this.options.selector,e.proxy(this.toggle,this)):this.options.trigger!="manual"&&(i=this.options.trigger=="hover"?"mouseenter":"focus",s=this.options.trigger=="hover"?"mouseleave":"blur",this.$element.on(i+"."+this.type,this.options.selector,e.proxy(this.enter,this)),this.$element.on(s+"."+this.type,this.options.selector,e.proxy(this.leave,this))),this.options.selector?this._options=e.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},getOptions:function(t){return t=e.extend({},e.fn[this.type].defaults,t,this.$element.data()),t.delay&&typeof t.delay=="number"&&(t.delay={show:t.delay,hide:t.delay}),t},enter:function(t){var n=e(t.currentTarget)[this.type](this._options).data(this.type);if(!n.options.delay||!n.options.delay.show)return n.show();clearTimeout(this.timeout),n.hoverState="in",this.timeout=setTimeout(function(){n.hoverState=="in"&&n.show()},n.options.delay.show)},leave:function(t){var n=e(t.currentTarget)[this.type](this._options).data(this.type);this.timeout&&clearTimeout(this.timeout);if(!n.options.delay||!n.options.delay.hide)return n.hide();n.hoverState="out",this.timeout=setTimeout(function(){n.hoverState=="out"&&n.hide()},n.options.delay.hide)},show:function(){var e,t,n,r,i,s,o;if(this.hasContent()&&this.enabled){e=this.tip(),this.setContent(),this.options.animation&&e.addClass("fade"),s=typeof this.options.placement=="function"?this.options.placement.call(this,e[0],this.$element[0]):this.options.placement,t=/in/.test(s),e.remove().css({top:0,left:0,display:"block"}).appendTo(t?this.$element:document.body),n=this.getPosition(t),r=e[0].offsetWidth,i=e[0].offsetHeight;switch(t?s.split(" ")[1]:s){case"bottom":o={top:n.top+n.height,left:n.left+n.width/2-r/2};break;case"top":o={top:n.top-i,left:n.left+n.width/2-r/2};break;case"left":o={top:n.top+n.height/2-i/2,left:n.left-r};break;case"right":o={top:n.top+n.height/2-i/2,left:n.left+n.width}}e.css(o).addClass(s).addClass("in")}},setContent:function(){var e=this.tip(),t=this.getTitle();e.find(".tooltip-inner")[this.options.html?"html":"text"](t),e.removeClass("fade in top bottom left right")},hide:function(){function r(){var t=setTimeout(function(){n.off(e.support.transition.end).remove()},500);n.one(e.support.transition.end,function(){clearTimeout(t),n.remove()})}var t=this,n=this.tip();return n.removeClass("in"),e.support.transition&&this.$tip.hasClass("fade")?r():n.remove(),this},fixTitle:function(){var e=this.$element;(e.attr("title")||typeof e.attr("data-original-title")!="string")&&e.attr("data-original-title",e.attr("title")||"").removeAttr("title")},hasContent:function(){return this.getTitle()},getPosition:function(t){return e.extend({},t?{top:0,left:0}:this.$element.offset(),{width:this.$element[0].offsetWidth,height:this.$element[0].offsetHeight})},getTitle:function(){var e,t=this.$element,n=this.options;return e=t.attr("data-original-title")||(typeof n.title=="function"?n.title.call(t[0]):n.title),e},tip:function(){return this.$tip=this.$tip||e(this.options.template)},validate:function(){this.$element[0].parentNode||(this.hide(),this.$element=null,this.options=null)},enable:function(){this.enabled=!0},disable:function(){this.enabled=!1},toggleEnabled:function(){this.enabled=!this.enabled},toggle:function(){this[this.tip().hasClass("in")?"hide":"show"]()},destroy:function(){this.hide().$element.off("."+this.type).removeData(this.type)}},e.fn.tooltip=function(n){return this.each(function(){var r=e(this),i=r.data("tooltip"),s=typeof n=="object"&&n;i||r.data("tooltip",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.tooltip.Constructor=t,e.fn.tooltip.defaults={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover",title:"",delay:0,html:!0}}(window.jQuery),!function(e){"use strict";var t=function(e,t){this.init("popover",e,t)};t.prototype=e.extend({},e.fn.tooltip.Constructor.prototype,{constructor:t,setContent:function(){var e=this.tip(),t=this.getTitle(),n=this.getContent();e.find(".popover-title")[this.options.html?"html":"text"](t),e.find(".popover-content > *")[this.options.html?"html":"text"](n),e.removeClass("fade top bottom left right in")},hasContent:function(){return this.getTitle()||this.getContent()},getContent:function(){var e,t=this.$element,n=this.options;return e=t.attr("data-content")||(typeof n.content=="function"?n.content.call(t[0]):n.content),e},tip:function(){return this.$tip||(this.$tip=e(this.options.template)),this.$tip},destroy:function(){this.hide().$element.off("."+this.type).removeData(this.type)}}),e.fn.popover=function(n){return this.each(function(){var r=e(this),i=r.data("popover"),s=typeof n=="object"&&n;i||r.data("popover",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.popover.Constructor=t,e.fn.popover.defaults=e.extend({},e.fn.tooltip.defaults,{placement:"right",trigger:"click",content:"",template:'<div class="popover"><div class="arrow"></div><div class="popover-inner"><h3 class="popover-title"></h3><div class="popover-content"><p></p></div></div></div>'})}(window.jQuery),!function(e){"use strict";function t(t,n){var r=e.proxy(this.process,this),i=e(t).is("body")?e(window):e(t),s;this.options=e.extend({},e.fn.scrollspy.defaults,n),this.$scrollElement=i.on("scroll.scroll-spy.data-api",r),this.selector=(this.options.target||(s=e(t).attr("href"))&&s.replace(/.*(?=#[^\s]+$)/,"")||"")+" .nav li > a",this.$body=e("body"),this.refresh(),this.process()}t.prototype={constructor:t,refresh:function(){var t=this,n;this.offsets=e([]),this.targets=e([]),n=this.$body.find(this.selector).map(function(){var t=e(this),n=t.data("target")||t.attr("href"),r=/^#\w/.test(n)&&e(n);return r&&r.length&&[[r.position().top,n]]||null}).sort(function(e,t){return e[0]-t[0]}).each(function(){t.offsets.push(this[0]),t.targets.push(this[1])})},process:function(){var e=this.$scrollElement.scrollTop()+this.options.offset,t=this.$scrollElement[0].scrollHeight||this.$body[0].scrollHeight,n=t-this.$scrollElement.height(),r=this.offsets,i=this.targets,s=this.activeTarget,o;if(e>=n)return s!=(o=i.last()[0])&&this.activate(o);for(o=r.length;o--;)s!=i[o]&&e>=r[o]&&(!r[o+1]||e<=r[o+1])&&this.activate(i[o])},activate:function(t){var n,r;this.activeTarget=t,e(this.selector).parent(".active").removeClass("active"),r=this.selector+'[data-target="'+t+'"],'+this.selector+'[href="'+t+'"]',n=e(r).parent("li").addClass("active"),n.parent(".dropdown-menu").length&&(n=n.closest("li.dropdown").addClass("active")),n.trigger("activate")}},e.fn.scrollspy=function(n){return this.each(function(){var r=e(this),i=r.data("scrollspy"),s=typeof n=="object"&&n;i||r.data("scrollspy",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.scrollspy.Constructor=t,e.fn.scrollspy.defaults={offset:10},e(window).on("load",function(){e('[data-spy="scroll"]').each(function(){var t=e(this);t.scrollspy(t.data())})})}(window.jQuery),!function(e){"use strict";var t=function(t){this.element=e(t)};t.prototype={constructor:t,show:function(){var t=this.element,n=t.closest("ul:not(.dropdown-menu)"),r=t.attr("data-target"),i,s,o;r||(r=t.attr("href"),r=r&&r.replace(/.*(?=#[^\s]*$)/,""));if(t.parent("li").hasClass("active"))return;i=n.find(".active a").last()[0],o=e.Event("show",{relatedTarget:i}),t.trigger(o);if(o.isDefaultPrevented())return;s=e(r),this.activate(t.parent("li"),n),this.activate(s,s.parent(),function(){t.trigger({type:"shown",relatedTarget:i})})},activate:function(t,n,r){function o(){i.removeClass("active").find("> .dropdown-menu > .active").removeClass("active"),t.addClass("active"),s?(t[0].offsetWidth,t.addClass("in")):t.removeClass("fade"),t.parent(".dropdown-menu")&&t.closest("li.dropdown").addClass("active"),r&&r()}var i=n.find("> .active"),s=r&&e.support.transition&&i.hasClass("fade");s?i.one(e.support.transition.end,o):o(),i.removeClass("in")}},e.fn.tab=function(n){return this.each(function(){var r=e(this),i=r.data("tab");i||r.data("tab",i=new t(this)),typeof n=="string"&&i[n]()})},e.fn.tab.Constructor=t,e(function(){e("body").on("click.tab.data-api",'[data-toggle="tab"], [data-toggle="pill"]',function(t){t.preventDefault(),e(this).tab("show")})})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=e.extend({},e.fn.typeahead.defaults,n),this.matcher=this.options.matcher||this.matcher,this.sorter=this.options.sorter||this.sorter,this.highlighter=this.options.highlighter||this.highlighter,this.updater=this.options.updater||this.updater,this.$menu=e(this.options.menu).appendTo("body"),this.source=this.options.source,this.shown=!1,this.listen()};t.prototype={constructor:t,select:function(){var e=this.$menu.find(".active").attr("data-value");return this.$element.val(this.updater(e)).change(),this.hide()},updater:function(e){return e},show:function(){var t=e.extend({},this.$element.offset(),{height:this.$element[0].offsetHeight});return this.$menu.css({top:t.top+t.height,left:t.left}),this.$menu.show(),this.shown=!0,this},hide:function(){return this.$menu.hide(),this.shown=!1,this},lookup:function(t){var n;return this.query=this.$element.val(),!this.query||this.query.length<this.options.minLength?this.shown?this.hide():this:(n=e.isFunction(this.source)?this.source(this.query,e.proxy(this.process,this)):this.source,n?this.process(n):this)},process:function(t){var n=this;return t=e.grep(t,function(e){return n.matcher(e)}),t=this.sorter(t),t.length?this.render(t.slice(0,this.options.items)).show():this.shown?this.hide():this},matcher:function(e){return~e.toLowerCase().indexOf(this.query.toLowerCase())},sorter:function(e){var t=[],n=[],r=[],i;while(i=e.shift())i.toLowerCase().indexOf(this.query.toLowerCase())?~i.indexOf(this.query)?n.push(i):r.push(i):t.push(i);return t.concat(n,r)},highlighter:function(e){var t=this.query.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&");return e.replace(new RegExp("("+t+")","ig"),function(e,t){return"<strong>"+t+"</strong>"})},render:function(t){var n=this;return t=e(t).map(function(t,r){return t=e(n.options.item).attr("data-value",r),t.find("a").html(n.highlighter(r)),t[0]}),t.first().addClass("active"),this.$menu.html(t),this},next:function(t){var n=this.$menu.find(".active").removeClass("active"),r=n.next();r.length||(r=e(this.$menu.find("li")[0])),r.addClass("active")},prev:function(e){var t=this.$menu.find(".active").removeClass("active"),n=t.prev();n.length||(n=this.$menu.find("li").last()),n.addClass("active")},listen:function(){this.$element.on("blur",e.proxy(this.blur,this)).on("keypress",e.proxy(this.keypress,this)).on("keyup",e.proxy(this.keyup,this)),(e.browser.chrome||e.browser.webkit||e.browser.msie)&&this.$element.on("keydown",e.proxy(this.keydown,this)),this.$menu.on("click",e.proxy(this.click,this)).on("mouseenter","li",e.proxy(this.mouseenter,this))},move:function(e){if(!this.shown)return;switch(e.keyCode){case 9:case 13:case 27:e.preventDefault();break;case 38:e.preventDefault(),this.prev();break;case 40:e.preventDefault(),this.next()}e.stopPropagation()},keydown:function(t){this.suppressKeyPressRepeat=!~e.inArray(t.keyCode,[40,38,9,13,27]),this.move(t)},keypress:function(e){if(this.suppressKeyPressRepeat)return;this.move(e)},keyup:function(e){switch(e.keyCode){case 40:case 38:break;case 9:case 13:if(!this.shown)return;this.select();break;case 27:if(!this.shown)return;this.hide();break;default:this.lookup()}e.stopPropagation(),e.preventDefault()},blur:function(e){var t=this;setTimeout(function(){t.hide()},150)},click:function(e){e.stopPropagation(),e.preventDefault(),this.select()},mouseenter:function(t){this.$menu.find(".active").removeClass("active"),e(t.currentTarget).addClass("active")}},e.fn.typeahead=function(n){return this.each(function(){var r=e(this),i=r.data("typeahead"),s=typeof n=="object"&&n;i||r.data("typeahead",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.typeahead.defaults={source:[],items:8,menu:'<ul class="typeahead dropdown-menu"></ul>',item:'<li><a href="#"></a></li>',minLength:1},e.fn.typeahead.Constructor=t,e(function(){e("body").on("focus.typeahead.data-api",'[data-provide="typeahead"]',function(t){var n=e(this);if(n.data("typeahead"))return;t.preventDefault(),n.typeahead(n.data())})})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.options=e.extend({},e.fn.affix.defaults,n),this.$window=e(window).on("scroll.affix.data-api",e.proxy(this.checkPosition,this)),this.$element=e(t),this.checkPosition()};t.prototype.checkPosition=function(){if(!this.$element.is(":visible"))return;var t=e(document).height(),n=this.$window.scrollTop(),r=this.$element.offset(),i=this.options.offset,s=i.bottom,o=i.top,u="affix affix-top affix-bottom",a;typeof i!="object"&&(s=o=i),typeof o=="function"&&(o=i.top()),typeof s=="function"&&(s=i.bottom()),a=this.unpin!=null&&n+this.unpin<=r.top?!1:s!=null&&r.top+this.$element.height()>=t-s?"bottom":o!=null&&n<=o?"top":!1;if(this.affixed===a)return;this.affixed=a,this.unpin=a=="bottom"?r.top-n:null,this.$element.removeClass(u).addClass("affix"+(a?"-"+a:""))},e.fn.affix=function(n){return this.each(function(){var r=e(this),i=r.data("affix"),s=typeof n=="object"&&n;i||r.data("affix",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.affix.Constructor=t,e.fn.affix.defaults={offset:0},e(window).on("load",function(){e('[data-spy="affix"]').each(function(){var t=e(this),n=t.data();n.offset=n.offset||{},n.offsetBottom&&(n.offset.bottom=n.offsetBottom),n.offsetTop&&(n.offset.top=n.offsetTop),t.affix(n)})})}(window.jQuery);
$(function(){

    var POLLING_INTERVAL = 60000;

    function playStream(flashStreamer,flashFile,htmlUrl,title,prompt,feedback){
        play(true,flashStreamer,flashFile,htmlUrl,title,prompt,feedback);
    }

    function playFile(url,title,prompt,feedback){
        play(false,'',url,url,title,prompt,feedback);
    }

    function play(streaming,flashStreamer,flashFile,htmlUrl,title,prompt,feedback) {
        //jwplayer uses the video tag, even for html5 audio, so we kick it to the curb for iOS
        //but we want to use the flash player when possible to get the analytics and stuff
        if (navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad|android)/)) {
            setupHtmlPlayer(htmlUrl);
        } else {
            setupFlashPlayer(streaming,flashStreamer,flashFile);
        }
        setupAudioInterface(title,prompt,feedback);
    }

    function setupFlashPlayer(streaming,streamer,file){
        var options = {
            file: file,
            modes: [
                {
                    type: 'flash',
                    src: 'http://www.npr.org/templates/javascript/jwplayer/player.swf'
                }
            ],
            skin: 'http://www.npr.org/design/stage/audioTest/live-convention-controls.zip',
            controlbar: 'bottom',
            width: '41',
            height: '41',
            bufferlength: '5',
			plugins: {
				'gapro-2': {
                    'trackingobject': '_gaq',
                    'trackstarts': 'true',
                    'trackpercentage': 'true',
                    'tracktime': 'true'
				}
			},
			events: {
				onBuffer: function () {
                    $('#audio').addClass('buffering');
                    $('#audio').removeClass('playing');
				},
				onPlay: function () {
                    $('#audio').removeClass('buffering');
                    $('#audio').addClass('playing');
				},
				onPause: function() {
                    $('#audio').removeClass('buffering');
                    $('#audio').removeClass('playing');
				}
			}
        }

        if(streaming){
            options['provider'] = 'rtmp';
            options['streamer'] = streamer;
        }

        jwplayer('jwplayer').setup(options);
    }

    function setupHtmlPlayer(url){
        $('#audio-htmlcontrol').show();
        $('#audio-htmlstream')[0].src = url;
    }

    function setupAudioInterface(title,prompt,feedback){
        //just in case we're switching to a new stream
        $('#audio').removeClass('buffering');
        $('#audio').removeClass('playing');

        $("#audio-title").text(title);
        $("#audio-prompt").text(prompt);
        $("#audio-feedback #audio-feedback-message").text(feedback);
    }

    //interactivity for the html player
    $('#audio-htmlcontrol').click(function(){
        var player = $('#audio-htmlstream')[0];
        if(player.paused) {
            player.play();
            $('#audio').addClass('playing');
        } else {
            player.pause();
            $('#audio').removeClass('playing');
        }
    });

    var oldStatus = {};

    function fireItUp(){
        $.getJSON('status.json?t=' + (new Date()).getTime(), function(status) {
            //check if the status has changed
            if(!_.isEqual(oldStatus, status)) {
                oldStatus = status;
                if(status['audio'] == 'true') {
                    if(status['streaming'] == 'true') {
                        playStream(status['flashStreamer'],status['flashFile'],status['htmlUrl'],status['title'],status['prompt'],status['feedback']);
	                    $("body").removeClass("comingsoon").addClass("not-coming");
                    } else {
                        playFile(status['url'],status['title'],status['prompt'],status['feedback']);
						$("#comingsoon-message").html(status['message']);
	                    $("body").removeClass("not-coming").addClass("comingsoon");
                    }
                    $("body").removeClass("no-audio").addClass("audio");
                } else {
                    $("#comingsoon-message").html(status['message']);
                    $("body").removeClass("audio").addClass("no-audio");
                    $("body").removeClass("not-coming").addClass("comingsoon");
                }
            }
        });
    }

    fireItUp();
    setInterval(fireItUp, POLLING_INTERVAL);
});
$(function() {
    /* Settings */
    var $body = $('body');

    var ELECTORAL_VOTES_TO_WIN = 270;
    var STATE_TEMPLATE = _.template($("#state-template").html());
    var CALLED_TEMPLATE = _.template($("#called-template").html());
    var INCOMING_TEMPLATE = _.template($("#incoming-template").html());
    var CLOSING_TEMPLATE = _.template($("#closing-template").html());
    var TOSSUP_TEMPLATE = _.template($("#tossup-template").html());
    var COMBO_GROUP_TEMPLATE = _.template($("#combo-group-template").html());
    var BLOG_POST_TEMPLATE = _.template($("#blog-post-template").html());
    var SHOW_TOOLTIPS = !('ontouchstart' in document.documentElement);
    var MAX_STATES_FOR_WIDE_MODE = 12;
    var MAX_COMBO_GROUP = 7;
    var POLLING_INTERVAL = 30000;
    var UPDATE_CLOSING_INTERVAL = 60000;
    var RIVER_TIMER = null;

    if (!SHOW_TOOLTIPS) { $body.addClass("touch-device"); } else { $body.addClass("no-touch"); }

    /* Global state */
    var wide_mode = false;
    var alerts = [];
    var alert_timer = null;
    var next_closing = null;
    var window_width = 0;
    var winner = null;
    var freeze_alerts = false;
    var game_mode = false;

    /* Elements */
    var electris_el = $("#electris");
    var electris_skinny_el = $("#electris-skinny");
    var electris_line_el = electris_el.find(".line");
    var electris_skinny_line_el = electris_skinny_el.find(".line");
    var alert_el = $(".electris-alert");
    var results_el = $("#incoming");
    var maincontent_el = $("#the-stuff");
    var red_candidate_el = $(".candidate.red");
    var blue_candidate_el = $(".candidate.blue");
    var bucket_els = $(".bucket");
    var red_bucket_el = red_candidate_el.find(".bucket");
    var red_bucket_wide_el = electris_el.find('.candidate.red').find('.bucket');
    var blue_bucket_el = blue_candidate_el.find(".bucket");
    var blue_bucket_wide_el = electris_el.find('.candidate.blue').find('.bucket');
    var red_tossups_el = red_candidate_el.find(".tossups");
    var blue_tossups_el = blue_candidate_el.find(".tossups");
    var red_histogram_el = red_candidate_el.find(".histogram");
    var blue_histogram_el = blue_candidate_el.find(".histogram");
    var red_votes_el = $(".red-votes");
    var blue_votes_el = $(".blue-votes");
    var red_needs_el = $(".red-needs");
    var blue_needs_el = $(".blue-needs");
    var called_el = $(".pres-called");
    var incoming_el = $(".pres-watching");
    var closing_el = $(".pres-closing");
    var live_blog_el = $("#live-blog-items");
    var live_blog_more_el = $('#live-blog-more');
    var combinations_modal_el = $("#combinations-modal");

    /* State data */
    var states = [];
    var states_by_id = {};
    var red_votes = 0;
    var blue_votes = 0;
    var total_tossup_states = 0;
    var polls_closing_html = {};
    var incoming_count = 0;
    var called_count = 0;

    /* Final BOP */
    var bop = {"senate": {"other": {"net_pickups": 1, "total_pickups": 1, "total": 2, "needed_for_majority": 49}, "republicans": {"net_pickups": -2, "total_pickups": 1, "total": 45, "needed_for_majority": 6}, "democrats": {"net_pickups": 1, "total_pickups": 2, "total": 53, "needed_for_majority": 0}, "not_called": 0}, "house": {"other": {"total": 0, "needed_for_majority": 218}, "republicans": {"total": 234, "needed_for_majority": 0}, "democrats": {"total": 201, "needed_for_majority": 18}, "not_called": 3}, "president": {"republicans": {"total": 206, "needed_for_majority": 64}, "democrats": {"total": 332, "needed_for_majority": 0}}};


    /* User data */
    var tossup_picks = {};

    /* DATA PROCESSING & RENDERING */

    function add_state(state,animate) {
        /*
         * Render a single state and add it to the correct bucket(s).
         */
        var el = $(STATE_TEMPLATE({
            state: state
        }));
        //setting up a second element so that our styles get applied properly when we drop the boxes
        var el2 = $(STATE_TEMPLATE({
            state: state
        }));

        // Called states
        if (state.call) {
            if (state.call === "r") {
                $(red_bucket_el[0]).append(el);
                //like i said above, for some reason, we need to be explicit about these elements for the box dropping styles
                $(red_bucket_el[1]).append(el2);
            } else if (state.call === "d") {
                $(blue_bucket_el[0]).append(el);
                $(blue_bucket_el[1]).append(el2);
            }
            if (SHOW_TOOLTIPS) {
                el.find("i").tooltip({});
            }

            //happens when we're adding a new state to an existing stack of states
            if(animate){
                //IE can't swing this, so don't bother
                if(!$.browser.msie) {
                    el.addClass('fall').delay(13000).queue(function(next){
                        $(this).removeClass("fall");
                        next();
                    });
                    el2.addClass('fall').delay(13000).queue(function(next){
                        $(this).removeClass("fall");
                        next();
                    });
                }
            }

        // toss-up states
        } else if (state.id in tossup_picks) {
			if (tossup_picks[state.id] === "r") {
				red_bucket_wide_el.append(el);
			} else {
				blue_bucket_wide_el.append(el);
			}
            el.addClass('fall').delay(6000).queue(function(next){
                $(this).removeClass("fall");
                next();
            });
        }

        el = null;
    }

    function add_states() {
        /*
         * Add states to the tetris graph in an organized fashion.
         */
        var red_called = [];
        var red_predicted = [];
        var blue_called = [];
        var blue_predicted = [];
        var states_length = states.length;

        // Group states together
        for (var i = 0; i < states_length; i++) {
            var state = states[i];

            if (state.call === "r") {
                red_called.push(state)
            } else if (state.call === "d") {
                blue_called.push(state)
            } else if (state.id in tossup_picks) {
                if (tossup_picks[state.id] === "r") {
                    red_predicted.push(state);
                } else {
                    blue_predicted.push(state);
                }
            }
        }

        // Clear old state graphics
        $(".state").remove();

        // Add states by groups
        var groups = [red_called, blue_called, red_predicted, blue_predicted];
        var groups_length = groups.length;

        for (var i = 0; i < groups_length; i++) {
            var states_group = groups[i];
            var states_group_length = states_group.length;

            // Sort by votes *top to bottom*
            states_group.reverse();

            for (var j = 0; j < states_group_length; j++) {
                add_state(states_group[j]);
            }
        }
    }

    function compute_stats(generate_combos) {
        /*
         * Compute and display vote stats.
         */
        var states_called_red = [];
        var states_called_blue = [];
        var states_user_red = [];
        var states_user_blue = [];
        var states_not_called = [];
        var states_length = states.length;

        for (var i = 0; i < states_length; i++) {
            var state = states[i];

            if (state.call === "r") {
                states_called_red.push(state);
            } else if (state.call === "d") {
                states_called_blue.push(state)
            } else if (state.id in tossup_picks) {
                if (tossup_picks[state.id] === "r") {
                    states_user_red.push(state);
                } else {
                    states_user_blue.push(state);
                }
            } else {
                states_not_called.push(state);
            }
        };

        function sum_votes(states_group) {
            return _.reduce(states_group, function(count, state) { return count + state.electoral_votes; }, 0);
        }

        var red_votes_called = sum_votes(states_called_red);
        var red_votes_user = sum_votes(states_user_red);
        red_votes = red_votes_called + red_votes_user;
        red_votes_el.text(red_votes);
        red_needs_el.text(Math.max(0, ELECTORAL_VOTES_TO_WIN - red_votes));
        red_candidate_el.toggleClass("winner", red_votes >= ELECTORAL_VOTES_TO_WIN);

        var blue_votes_called = sum_votes(states_called_blue);
        var blue_votes_user = sum_votes(states_user_blue);
        blue_votes = blue_votes_called + blue_votes_user;
        blue_votes_el.text(blue_votes);
        blue_needs_el.text(Math.max(0, ELECTORAL_VOTES_TO_WIN - blue_votes));
        blue_candidate_el.toggleClass("winner", blue_votes >= ELECTORAL_VOTES_TO_WIN);

        var old_winner = winner;

        if (red_votes_called > ELECTORAL_VOTES_TO_WIN) {
            winner = "r";
        } else if (blue_votes_called >= ELECTORAL_VOTES_TO_WIN) {
            winner = "d";
        } else {
            winner = null;
        }

        // WINNER!
        if (winner && !old_winner) {
            var alert_text = null;
            var side = null;

            if (winner === "d") {
                alert_text = 'NPR projects that <strong class="alert-name">Barack Obama</strong> will win re-election. <strong><b>z</b></strong>';
                side = "blue";
            } else {
                alert_text = 'NPR projects that <strong class="alert-name">Mitt Romney</strong> will win the presidency. <strong><b>z</b></strong>';
                side = "red";
            }

            alerts.push({
                body: alert_text,
                side: side,
                winner: true
            });

            update_alerts();
        // We changed our mind...
        } else if (!winner && old_winner) {
            var alert_text = null;
            var side = null;

            if (old_winner === "d") {
                alert_text = 'NPR has retracted its earlier projection that <strong class="alert-name">Barack Obama</strong> will win re-election.';
            } else {
                alert_text = 'NPR has retracted its earlier projection that <strong class="alert-name">Mitt Romney</strong> will win the presidency.';
            }

            // Replace any lingering alerts with just the one we care about
            // alerts = [];
            // alerts.push({
            //     body: alert_text,
            //     side: null,
            //     winner: false
            // });

            freeze_alerts = false;

            update_alerts();
        // The whole thing flips
        } else if (winner && old_winner && winner != old_winner) {
            var alert_text = null;
            var side = null;

            if (old_winner === "d") {
                alert_text = 'NPR has retracted its earlier projection that <strong class="alert-name">Barack Obama</strong> will win re-election.';
            } else {
                alert_text = 'NPR has retracted its earlier projection that <strong class="alert-name">Mitt Romney</strong> will win the presidency.';
            }

            // Replace any lingering alerts with just the one we care about
            // alerts = [];
            // alerts.push({
            //     body: alert_text,
            //     side: null,
            //     winner: false
            // });

            if (winner === "d") {
                alert_text = 'NPR projects that <strong class="alert-name">President Obama</strong> will win re-election.';
                side = "blue";
            } else {
                alert_text = 'NPR projects that <strong class="alert-name">Mitt Romney</strong> will win the presidency.';
                side = "red";
            }

            alerts.push({
                body: alert_text,
                side: side,
                winner: true
            });

            freeze_alerts = false;

            update_alerts();
        }

        // Potentially flip modes
        var old_wide_mode = wide_mode;

        wide_mode = (states_not_called.length <= MAX_STATES_FOR_WIDE_MODE) && !winner;

		// FLIP!
		if (wide_mode && !old_wide_mode) {
			$body.addClass('wide-mode');
			$("#results").addClass('active');
			$("#results-tab").attr('href','#results');
        // FLIP BACK!
        } else if (!wide_mode && old_wide_mode) {
            $body.removeClass('wide-mode');
            flip_skinny_mode();
        }

        resize_buckets();

        if (wide_mode && generate_combos) {
            generate_winning_combinations(states_not_called);
        }
    }

    function flip_wide_mode() {
        wide_mode = true;
        electris_skinny_el.hide();
        results_el.hide();
        electris_el.show();
        resize_buckets();
        // for mobile tabs
        $("#results-wide").addClass('active');
        $("#results-tab").attr('href','#results-wide');
    }

    function flip_skinny_mode() {
        wide_mode = false;
        electris_skinny_el.show();
        results_el.show();
        electris_el.hide();
        resize_buckets();
        // for mobile tabs
        $("#results").addClass('active');
        $("#results-tab").attr('href','#results');
    }

    $('#wide-button').on('click',  flip_wide_mode );
    $('#skinny-button').on('click',  flip_skinny_mode );

    function resize_buckets() {
        /*
         * Resize state buckets.
         */
        window_width = maincontent_el.width();
        var bucket_columns = 10;

        var default_height = ELECTORAL_VOTES_TO_WIN / bucket_columns;
        var vote_height = Math.ceil(Math.max(red_votes, blue_votes) / bucket_columns);
        var height = Math.max(default_height, vote_height);
        bucket_els.css("height", height + "em");

		var line_height = 0.1;
        var header_height = 0;

        if (wide_mode) {

            //using the actual window.height instead of the variable we set up top
            //cuz this is based on our media queries
            header_height = 3;
            if ($(window).width() <= 979) {
                header_height = 4;
            }
            if ($(window).width() <= 767) {
                header_height = 8;
            }

			var bucket_pos = blue_bucket_el.position();
			var bucket2_pos = red_bucket_el.position();
			var line_left = 0;
			var line_width = '100%';

			if (window_width >= 724) {
				line_left = bucket_pos.left;
				line_width = (bucket2_pos.left + red_bucket_el.width()) - bucket_pos.left + 'px';
			}

            // Reinitialize bootstrap tooltips for wide bucket
            if (SHOW_TOOLTIPS) {
                $('[rel="tooltip"]').tooltip();
            }
        }

		if ($.browser.msie) {
			var line_top = header_height + default_height;
		} else {
			var line_top = header_height + height - default_height + line_height;
		}

        if (wide_mode) {
			electris_line_el.css('top', line_top + 'em').css('left', line_left + 'px').width(line_width);
		} else {
			electris_skinny_line_el.css('top', line_top + 'em');
		}

        // Kill affix plugin for small displays
        if (window_width < 768){
            $("#results-bar").removeAttr('data-spy');
        }
    }

    $(window).resize(resize_buckets);

    function combinations(superset, min_size, max_size) {
        /*
         * Compute all possible combinations of a given array.
         *
         * Algorithm via http://stackoverflow.com/a/4061167
         */
        var result = [];
        var size = min_size || 1;
        var max_size = max_size || superset.length

        while (size <= max_size) {
            var done = false;
            var current_combo = null;
            var distance_back = null;
            var new_last_index = null;
            var indexes = [];
            var indexes_last = size - 1;
            var superset_last = superset.length - 1;

            // initialize indexes to start with leftmost combo
            for (var i = 0; i < size; ++i) {
                indexes[i] = i;
            }

            while (!done) {
                current_combo = [];
                for (i = 0; i < size; ++i) {
                current_combo.push(superset[indexes[i]]);
            }

            result.push(current_combo);

            if (indexes[indexes_last] == superset_last) {
                done = true;
                for (i = indexes_last - 1; i > -1 ; --i) {
                    distance_back = indexes_last - i;
                    new_last_index = indexes[indexes_last - distance_back] + distance_back + 1;

                    if (new_last_index <= superset_last) {
                        indexes[indexes_last] = new_last_index;
                        done = false;
                        break;
                    }
                }

                if (!done) {
                    ++indexes[indexes_last - distance_back];
                    --distance_back;
                    for (; distance_back; --distance_back) {
                        indexes[indexes_last - distance_back] = indexes[indexes_last - distance_back - 1] + 1;
                    }
                }
            }
                else {++indexes[indexes_last]}
            }

            size++;
        }

        return result;
    }

    function is_subset(combos_so_far, new_combo) {
        /*
         * Determine if one combo is a subset of any of a list of other combos.
         */
        return _.find(combos_so_far, function(old_combo) {
            if (new_combo.slice(0, old_combo.combo.length).toString() === old_combo.combo.toString()) {
                return true;
            }

            return false;
        });
    }

    function generate_winning_combinations(undecided_states) {
        /*
         * Generate combinations of states that can win the election.
         */
        var red_needs = ELECTORAL_VOTES_TO_WIN - red_votes;
        var blue_needs = ELECTORAL_VOTES_TO_WIN - blue_votes;

        var combos = [];
        var red_combos = [];
        var blue_combos = [];
        var red_keys = [];
        var blue_keys = [];
        var red_groups = {};
        var blue_groups = {};

        var state_ids = _.pluck(undecided_states, "id");

        // NB: A sorted input list generates a sorted output list
        // from our combinations algorithm.
        combos = combinations(state_ids, 1);
        combos_length = combos.length;

        for (var i = 0; i < combos_length; i++) {
            var combo = combos[i];
            var combo_length = combo.length;
            var combo_votes = 0;

            for (var j = 0; j < combo_length; j++) {
                combo_votes += states_by_id[combo[j]].electoral_votes;
            }

            if (combo_votes >= red_needs && red_needs > 0) {
                if (!is_subset(red_combos, combo)) {
                    var combo_obj = { combo: combo, votes: combo_votes };

                    red_combos.push(combo_obj);

                    var key = combo_length;

                    // Combine large combos into one group
                    if (key > MAX_COMBO_GROUP) {
                        key = MAX_COMBO_GROUP;
                    }

                    if (!(key in red_groups)) {
                        red_keys.push(key);
                        red_groups[key] = [];
                    }

                    red_groups[key].push(combo_obj);
                }
            }

            if (combo_votes >= blue_needs && blue_needs > 0) {
                if (!is_subset(blue_combos, combo)) {
                    var combo_obj = { combo: combo, votes: combo_votes };

                    blue_combos.push(combo_obj);

                    var key = combo_length;

                    // Combine large combos into one group
                    if (key > MAX_COMBO_GROUP) {
                        key = MAX_COMBO_GROUP;
                    }

                    if (!(key in blue_groups)) {
                        blue_keys.push(key);
                        blue_groups[key] = [];
                    }

                    blue_groups[key].push(combo_obj);
                }
            }
        }

        var max_red_combo_group = _.max(_.values(red_groups), function(combo_group) {
            return combo_group.length;
        }) || 0;

        var max_blue_combo_group = _.max(_.values(blue_groups), function(combo_group) {
            return combo_group.length;
        }) || 0;

        max_red_combo_group = max_red_combo_group.length || 0;
        max_blue_combo_group = max_blue_combo_group.length || 0;

        var max_combo_group = _.max([max_red_combo_group, max_blue_combo_group]);

        function show_combos(keys, groups, side, base_votes) {
            var combo_groups_el = combinations_modal_el.find("ul." + side);
            var max_group_count = 0;
            combo_groups_el.empty();

            for (var key = 1; key < MAX_COMBO_GROUP + 1; key++) {
                var group = groups[key] || [];
                var group_length = group.length;

                var histogram_el = $(".histogram ." + side + key);
                histogram_el.toggleClass("active", group_length > 0);

                if (group_length > 0) {
                    if (window_width > 480) {
                        histogram_el.find(".bar").animate({ width: (group_length / max_combo_group * 100) + '%' }, 300);
                    } else {
                        histogram_el.find(".bar").css({ width: (group_length / max_combo_group * 100) + '%' });
                    }

                    var combo_group_el = $(COMBO_GROUP_TEMPLATE({
                        side: side,
                        key: key,
                        count: group_length,
                        last_group: (key == MAX_COMBO_GROUP)
                    }));

                    new_combo_group = true;

                    var combo_list_el = combo_group_el.find("ul");
                    var combo_els = [];

                    for (var i = 0; i < group_length; i++) {
                        var combo = group[i];
                        var combo_length = combo.combo.length;
                        var state_text = "";

                        for (var j = 0; j < combo_length; j++) {
                            var state = states_by_id[combo.combo[j]];

                            state_text += "<strong><b>" + state.stateface + "</b> " + state.name + " (" + state.electoral_votes + ")</strong>";

                            if (j != combo_length - 1) {
                                state_text += " + ";
                            }
                        };

                        var el = $("<li>" + state_text + " = " + (base_votes + combo.votes) + "</li>");
                        combo_els.push(el);

                        var el = null;
                    };

                    combo_list_el.append(combo_els);
                    combo_groups_el.append(combo_group_el);

                    combo_group_el = null;
                    combo_list_el = null;
                    combo_els = null;
                } else {
                    histogram_el.find(".bar").css({ width: '0%' });
                }
            }

            if (combo_groups_el.is(":empty")) {
                if (base_votes >= ELECTORAL_VOTES_TO_WIN) {
                    combo_groups_el.html("<p>All states have been selected. There are no further paths to victory.</p>");
                } else {
                    combo_groups_el.html("<p>All states have been selected. There are no further paths to victory.</p>");
                }
            }

            combo_groups_el = null;
        }

        var red_states_won = [];
        var blue_states_won = [];

        _.each(tossup_picks, function(winner, state_id) {
            if (winner === "r") {
                red_states_won.push(states_by_id[state_id]);
            } else if (winner === "d") {
                blue_states_won.push(states_by_id[state_id]);
            }
        });

        red_candidate_el.find(".combos .robotext").html(must_win_robotext(
            "Romney",
            "Obama",
            red_combos,
            red_votes,
            red_states_won,
            blue_votes,
            blue_states_won
        ));

        show_combos(red_keys, red_groups, "red", red_votes);

        blue_candidate_el.find(".combos .robotext").html(must_win_robotext(
            "Obama",
            "Romney",
            blue_combos,
            blue_votes,
            blue_states_won,
            red_votes,
            red_states_won
        ));

        show_combos(blue_keys, blue_groups, "blue", blue_votes);
    }

    function must_win_robotext(candidate, opponent, combos, votes, states_won, opponent_votes, opponent_won) {
        /*
         * Generate robotext describing election scenario.
         */
        // Winner
        if (votes >= 270) {
            if (states_won.length == 0) {
                return candidate + " <strong>wins</strong> the Electoral College.";
            } else {
                return "If " + candidate + " wins the states you have selected then he will <strong>win the Electoral College</strong>.";
            }
        }

        // Deadlock!
        if (votes == 269 && opponent_votes == 269) {
            return 'In this scenario, neither candidate can win the Electoral College.<br /><a href="http://www.npr.org/blogs/itsallpolitics/2012/10/31/163950264/presidential-race-what-if-there-are-two-winners" target="_blank">What happens now? &raquo;</a>';
        }

        // Loser
        if (combos.length == 0) {
            if (opponent_won.length == 0) {
                return candidate + " <strong>cannot win</strong> the Electoral College.";
            } else {
                return "If " + opponent + " wins the states you have selected then " + candidate + " <strong>cannot win</strong> the Electoral College.";
            }
        }

        // One one-state combo left
        if (combos.length == 1 && combos[0].combo.length == 1) {
            var state = states_by_id[combos[0].combo[0]];

            if (states_won.length == 0) {
                return candidate + " must win <strong><b>" + state.stateface + "</b> " + state.name + "</strong> to win the Electoral College.";
            } else {
                return "If " + candidate + " wins the states you have selected then he must win <strong><b>" + state.stateface + "</b> " + state.name + "</strong> to win the Electoral College.";
            }
        }

        // One two-state combo left
        if (combos.length == 1 && combos[0].combo.length == 2) {
            var stateA = states_by_id[combos[0].combo[0]];
            var stateB = states_by_id[combos[0].combo[1]];

            if (states_won.length == 0) {
                return candidate + " must win <strong><b>" + stateA.stateface + "</b> " + stateA.name + " and <b>" + stateB.stateface + "</b> " + stateB.name + "</strong> to win the Electoral College.";
            } else {
                return "If " + candidate + " wins the states you have selected then he must win <strong><b>" + stateA.stateface + "</b> " + stateA.name + " and <b>" + stateB.stateface + "</b> " + stateB.name + "</strong> to win the Electoral College.";
            }
        }

        if (combos.length > 0) {
            var simplest_combo_length = combos[0].combo.length;
            var longest_combo_length = combos[combos.length - 1].combo.length;
        } else {
            var simplest_combo_length = 0;
            var longest_combo_length = 0;
        }

        // Two one-state combos left
        if (longest_combo_length == 1 && combos.length == 2) {
            var states_text = "";

            _.each(combos, function(combo, i, l) {
                var state = states_by_id[combo.combo[0]];
                states_text += "<b>" + state.stateface + "</b> " + state.name;

                if (i != l.length - 1) {
                    states_text += " or ";
                }
            });

            if (states_won.length == 0) {
                return candidate + " must win <strong>" + states_text + "</strong> to win the Electoral College.";
            } else {
                return "If " + candidate + " wins the states you have selected then he must win <strong>" + states_text + "</strong> to win the Electoral College.";
            }
        }

        // Path w/o picks
        if (states_won.length == 0) {
            return candidate + " must win <strong>at least " + simplest_combo_length + " more</strong> state" + (simplest_combo_length > 1 ? "s" : "") + ".";
        }

        // Path w/ picks
        return "If " + candidate + " wins the states you have selected then he must win <strong>at least " + simplest_combo_length  + " more</strong> state" + (simplest_combo_length > 1 ? "s" : "") + ".";
    }

    var tossup_click_handler = function(event) {
        /*
         * Select or unselect a tossup state.
         */
        var state_id = $(this).data("state-id");
        var winner = $(this).parent().hasClass("red") ? "r" : "d";
        var opposite_selector = winner === "r" ? "blue" : "red";
        var other_chiclet = $(".tossups." + opposite_selector + " li[data-state-id=" + state_id + "]");

        $(this).removeClass("taken");
        $(this).addClass("active");

        other_chiclet.removeClass("active");
        other_chiclet.addClass("taken");

        $(".state." + state_id).remove();

        if (state_id in tossup_picks) {
            // Deselecting
            if (tossup_picks[state_id] === winner) {
                $(this).removeClass("active");
                other_chiclet.removeClass("taken");

                delete tossup_picks[state_id];
            // Toggling from opponent
            } else {
                tossup_picks[state_id] = winner;
                var state = _.find(states, function(s) { return s.id == state_id });
                add_state(state);
            }
        // Initial selection
        } else {
            tossup_picks[state_id] = winner;
            var state = _.find(states, function(s) { return s.id == state_id });
            add_state(state);
        }

        compute_stats(true);

        $(this).removeClass("spinner");

        return false;
    };

    electris_el.on("click", ".histogram h4", function(event) {
        /*
         * Scroll to combos list.
         */
        var modal_body = combinations_modal_el.find(".modal-body");
        combinations_modal_el.modal("show");

        // NB: http://api.jquery.com/scrollTop/#comment-101347923
        modal_body.scrollTop(0);

        var target = $($(this).data("target"));
        var offset = -35;

        // On small screens we jump to top of candidate list instead
        if (window_width <= 480) {
            target = target.parent().parent();
            offset = -45;
        }

        modal_body.animate({
            scrollTop: target.position().top + offset
        }, 1000);
    });

    /* DATASET LOADING/POLLING */
    function percent_reporting(state) {
        var pct = Math.round(state.precincts_reporting / state.total_precincts * 100);

        if (pct < 1) {
            return "< 1% rept.";
        } else if (pct > 99 && pct < 100) {
            return "> 99% rept.";
        }

        return pct + "% rept.";
    }

    function init_states(data) {
        /*
         * Load initial state data from JSON.
         */
        states = data;

        states = states.reverse();

        var called_ul = called_el.find("ul");
        var incoming_ul = incoming_el.find("ul");
        var closing_ul = $("#closing-modal ul");
        var closing_modal_el = $("#closing-modal");
        var closing_toggle_els = $(".show-poll-closings");

        closing_toggle_els.on('click', function(){
            closing_modal_el.modal();
            return false;
        });

        _.each(states, function(state) {
            // Convert poll closing time to a moment()
            state.polls_close = moment(state.polls_close + " -0500", "YYYY-MM-DD hh:mm a Z");

            // Build lookup table
            states_by_id[state.id] = state;

            var html = TOSSUP_TEMPLATE({
                state: state
            });

            red_tossups_el.append(html);
            blue_tossups_el.append(html);

            if (!state.call) {
                total_tossup_states += 1;
            }
        });

        var alpha_states = _.sortBy(states, "name");
        var closing_times = {};
        var called_state_els = [];
        var incoming_state_els = [];

        _.each(alpha_states, function(state) {
            var red_pct = Math.round(state.rep_vote_count / (state.total_vote_count) * 100);
            var blue_pct = Math.round(state.dem_vote_count / (state.total_vote_count) * 100);

            if (red_pct) {
                red_pct = red_pct.toString() + "%";
            } else {
                red_pct = "&mdash;";
            }

            if (blue_pct) {
                blue_pct = blue_pct.toString() + "%";
            } else {
                blue_pct = "&mdash;";
            }

            var called_state_el = $(CALLED_TEMPLATE({
                state: state,
                red_pct: red_pct,
                blue_pct: blue_pct,
                percent_reporting: percent_reporting
            }));

            if (!state.call) {
                called_state_el.hide();
            } else {
                called_count += 1;
            }

            called_state_els.push(called_state_el);
            called_state_el = null;

            var incoming_state_el = $(INCOMING_TEMPLATE({
                state: state,
                red_pct: red_pct,
                blue_pct: blue_pct,
                percent_reporting: percent_reporting
            }));

            if (state.call || !state.total_vote_count) {
                incoming_state_el.hide();
            } else {
                incoming_count += 1;
            }

            incoming_state_els.push(incoming_state_el)
            incoming_state_el = null;

            var isodate = state.polls_close.format("YYYY-MM-DDTHH:mm:ss Z");

            if (!(isodate in closing_times)) {
                closing_times[isodate] = [];
            }

            closing_times[isodate].push(state);
        });

        called_ul.append(called_state_els);
        called_state_els = null;

        incoming_ul.append(incoming_state_els);
        incoming_state_els = null;

        called_el.toggle(called_count > 0);
        incoming_el.toggle(incoming_count > 0);

        var isodates = _.keys(closing_times).sort();

        _.each(isodates, function(isodate) {
            var closing_time = moment(isodate);

            var closing_html = CLOSING_TEMPLATE({
                closing_time: closing_time,
                states: closing_times[isodate]
            });

            if (!(isodate in polls_closing_html)) {
                polls_closing_html[isodate] = [];
            }

            polls_closing_html[isodate].push(closing_html);

            closing_ul.append(closing_html);
        });

        $(".tossups li").touchClick(tossup_click_handler);

        if (SHOW_TOOLTIPS) {
            $(".tossups li").tooltip();
        }

        update_next_closing();
        setInterval(update_next_closing, UPDATE_CLOSING_INTERVAL);

        update_bop(bop);
        add_states();
        compute_stats(true);

        if (called_count == 0) {
           alerts.push({
                body: '<p class="early-alert-info">Results will appear here as they arrive, around 7 p.m. ET.</p><p class="early-alert-info">Polls close at varying times throughout the U.S. &mdash; check out <a href="http://www.npr.org/blogs/itsallpolitics/2012/11/06/164344457/guide-for-the-day-an-election-day-timeline">our Election Day timeline</a>. <img src="img/early-alert.png" /></p>',
                side: null,
                no_calls: true
            });

           update_alerts();
        }
    }

    function update_next_closing() {
        /*
         * Update what poll closing time (if any) is display.
         */
        var now = moment();

        var next = _.find(_.keys(polls_closing_html).sort(), function(isodate) {
            var closing_time = moment(isodate);
            return closing_time > now;
        });

        if (next != next_closing) {
            closing_el.find("ul").html(polls_closing_html[next]);
            closing_el.show();

            next_closing = next;
        } else if (!next) {
            closing_el.hide();
        }
    }

    function update_states(data) {
        /*
         * Update state data from JSON.
         */
        var changes = false;
        var states_length = states.length;

        for (var i = 0; i < states_length; i++) {
            var old_state = states[i];
            var state = data[i];

            if (old_state["call"] != state["call"] ||
                old_state["dem_vote_count"] != state["dem_vote_count"] ||
                old_state["rep_vote_count"] != state["rep_vote_count"] ||
                old_state["precincts_reporting"] != state["precincts_reporting"]) {

                var red_pct = Math.round(state.rep_vote_count / (state.total_vote_count) * 100);
                var blue_pct = Math.round(state.dem_vote_count / (state.total_vote_count) * 100);

                if (red_pct) {
                    red_pct = red_pct.toString() + "%";
                } else {
                    red_pct = "&mdash;";
                }

                if (blue_pct) {
                    blue_pct = blue_pct.toString() + "%";
                } else {
                    blue_pct = "&mdash;";
                }

                var state_els = $("." + state.id);
                state_els.find(".red").html(red_pct);
                state_els.find(".blue").html(blue_pct);
                state_els.find(".precincts").html(percent_reporting(state));

                if (old_state["call"] != state["call"]) {
                    $(".state." + state.id).remove();
                    add_state(state, true);

                    // Uncalled
                    if (!state["call"]) {
                        // Show chiclet
                        $(".tossup." + state.id).show();

                        state_els.find(".red,.blue").removeClass("winner");

                        state_els.filter(".called").hide();
                        state_els.filter(".incoming").show();

                        called_count -= 1;
                        incoming_count += 1;
                        total_tossup_states += 1;

                        called_el.toggle(called_count > 0);
                        incoming_el.toggle(incoming_count > 0);

                        var candidate = (old_state["call"] == "d" ? "Barack Obama" : "Mitt Romney");

                        alerts.push({
                            body: 'NPR has retracted its earlier projection that <strong class="alert-name">' + candidate + '</strong> will win <strong class="alert-state"><b>' + state.stateface + '</b> ' + state.name + ' (' + state.electoral_votes + ')</strong>',
                            side: null
                        });
                    } else {
                        // Called
                        if (!old_state["call"]) {
                            // Hide chiclet
                            $(".tossup." + state.id).hide();

                            if (state.id in tossup_picks) {
                                delete tossup_picks[state.id];
                            }

                            if (state["call"] === "r") {
                                var side = "red";
                                state_els.find(".red").addClass("winner");
                            } else {
                                var side = "blue";
                                state_els.find(".blue").addClass("winner");
                            }

                            state_els.filter(".called").show();
                            state_els.filter(".incoming").hide();

                            called_count += 1;
                            incoming_count -= 1;
                            total_tossup_states -= 1;

                            called_el.toggle(called_count > 0);
                            incoming_el.toggle(incoming_count > 0);

                            // Unfreeze initial alert once a state is called
                            if (called_count == 1) {
                                freeze_alerts = false;
                            }

                            var candidate = (state["call"] == "d" ? "Barack Obama" : "Mitt Romney");

                            alerts.push({
                                body: 'NPR projects that <strong class="alert-name">' + candidate + '</strong> will win <strong class="alert-state"><b>' + state.stateface + '</b> ' + state.name + ' (' + state.electoral_votes + ')</strong>',
                                side: side
                            });
                        // Changed
                        } else {
                            if (state["call"] === "r") {
                                var side = "red";
                                state_els.find(".blue").removeClass("winner");
                                state_els.find(".red").addClass("winner");
                            } else {
                                var side = "blue";
                                state_els.find(".red").removeClass("winner");
                                state_els.find(".blue").addClass("winner");
                            }

                            var candidate = (state["call"] == "d" ? "Barack Obama" : "Mitt Romney");

                            alerts.push({
                                body: 'NPR now projects that <strong class="alert-name">' + candidate + '</strong> will win <strong class="alert-state"><b>' + state.stateface + '</b> ' + state.name + ' (' + state.electoral_votes + ')</strong>',
                                side: side
                            });
                        }
                    }
                } else {
                    if (state["total_vote_count"] > 0 && old_state["total_vote_count"] == 0) {
                        if (!state["call"]) {
                            state_els.filter(".incoming." + state.id).show();
                            incoming_count += 1;

                            incoming_el.toggle(incoming_count > 0);
                        }
                    }
                }

                states[i] = state;
                states[i].polls_close = old_state.polls_close;

                changes = true;
            }
        }

        update_bop(bop);

        if (changes) {
            called_el.toggle(called_count > 0);

            compute_stats(true);
            update_alerts();
        };
    }

    function fetch_states() {
        /*
         * Fetch JSON data from server and apply it.
         */
        $.getJSON("replay.json?t=" + (new Date()).getTime(), function(data) {
            if (states.length == 0) {
                init_states(data);
            } else {
                update_states(data);
            }
        });
    }

    function update_alerts() {
        /*
         * Clear old alerts and add any new ones.
         */
        // Don't crush existing alerts
        if (alert_timer || freeze_alerts) {
            return;
        }

        if (alerts.length > 0) {
            var new_alert = alerts.shift();

            alert_el.find(".alert-wrapper").html(new_alert.body);
            alert_el.removeClass("red blue");
            alert_el.addClass(new_alert.side);
            alert_el.show();

            if ('no_calls' in new_alert && new_alert.no_calls) {
                freeze_alerts = true;
                $(".results-row .electris-alert").hide();
            } else if ('winner' in new_alert && new_alert.winner) {
                freeze_alerts = true;
            } else {
                $(".results-row .electris-alert").show();
            }

            // Kill this alert and possibly start the next one
            alert_timer = setTimeout(function() {
                alert_timer = null;
                update_alerts();
            }, 825);
        } else {
            alert_el.hide();
        }
    }

    /* MEME TRACKER */

    var MEME_UPDATE_SECS = 120;
    var MEME_POSTS_TO_SHOW = 5;

    var MEME_PHOTO_TEMPLATE = _.template($("#meme-photo-template").html());
    var MEME_QUOTE_TEMPLATE = _.template($("#meme-quote-template").html());
    var MEME_VIDEO_TEMPLATE = _.template($("#meme-video-template").html());
    var MEME_REGULAR_TEMPLATE = _.template($("#meme-regular-template").html());

    var posts_el = $("#memetracker .posts");
    var posts_html = {};

    function ISODateString(d) {
        function pad(n) {
            return n < 10 ? '0' + n : n
        }

        return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + 'Z'
    }

    function update_memetracker(first_run) {
        /*
         * Update the memetracker from our tumblr feed.
         */
        $.getJSON('tumblr.json?t=' + (new Date()).getTime(), {}, function(posts) {
            var posts_length = posts.length;
            var has_tweets = false;

            for (var i = 0; i < posts_length; i++) {
                var post = posts[i];
                var template = null;

                if (post.type === "photo") {
                    template = MEME_PHOTO_TEMPLATE;
                } else if (post.type === "quote") {
                    template = MEME_QUOTE_TEMPLATE;
                } else if (post.type === "video") {
                    template = MEME_VIDEO_TEMPLATE;
                } else if (post.type === "regular") {
                    template = MEME_REGULAR_TEMPLATE;

                    post["regular-body"] = post["regular-body"]
                        // Prevent multiple requests for twitter widget js.
                        .replace('<script charset="utf-8" src="//platform.twitter.com/widgets.js" type="text/javascript"></script>', "")
                        // Fix malformed tweet markup.
                        .replace('</blockquote>\n<blockquote class="twitter-tweet">', "");
                }

                if (!template) {
                    return;
                }

                var html = template({
                    post: post,
                    isodate: ISODateString(new Date(post["unix-timestamp"] * 1000))
                });
                var el = $(html);

                // Old
                if (post.id in posts_html) {
                    // Changed
                    if (html != posts_html[post.id]) {
                        el.show();
                        posts_el.find("#post-" + post.id).replaceWith(el);

                        if (post.type === "regular") {
                           has_tweets = true;
                        }
                    }
                // New
                } else {
                    posts_el.prepend(el);

                    el = null;
                    el = posts_el.find("#post-" + post.id)

                    if (first_run) {
                        el.show();
                    } else {
                        el.slideDown(1000);
                    }

                    el.find(".tstamp").timeago();
                    el = null;

                    if (post.type === "regular") {
                        has_tweets = true;
                    }
                }

                posts_html[post.id] = html;
            }

            posts_el.find(".post:nth-child(5)").nextAll().remove();

            // Render incoming tweets
            if (has_tweets && !$.browser.msie) {
                if ('widgets' in twttr ) {
                    twttr.widgets.load(posts_el[0]);
                };
            }
        });
    }

    /* RIVER OF NEWS */

    var RIVER_POLLING_INTERVAL = 60000;
	var RIVER_INCREMENT = 25;
	var RIVER_DATA = []

	function fetch_news() {
        /*
         * Fetch the latest river of news.
         */
		$.ajax({
		    url: 'https://www.npr.org/buckets/agg/series/2012/elections/riverofnews/riverofnews.json',
		    dataType: 'json',
		    jsonpCallback: 'nprriverofnews',
		    success: function(data){
				if (RIVER_TIMER === null) {
					RIVER_TIMER = window.setInterval(fetch_news, RIVER_POLLING_INTERVAL);
				}
				RIVER_DATA = data;
				update_news();
		    }
		})
	}

	function update_news() {
        /*
         * Update the river of news feed.
         */
        var data = RIVER_DATA;
		var new_news = [];

		$.each(data.news.sticky, function(j, k) {
			if (k.News.status) {
				new_news.push(BLOG_POST_TEMPLATE({
                    post: k.News,
                    sticky: "sticky"
                }));
			}
		});

		$.each(data.news.regular.slice(0, RIVER_INCREMENT), function(j, k) {
			if (k.News.status) {
				new_news.push(BLOG_POST_TEMPLATE({
                    post: k.News,
                    sticky: ''
                }));
			}
		});

		live_blog_el.empty().append(new_news);
        live_blog_el.find("p.timeago").timeago();

        new_news = null;
	}

	live_blog_more_el.on('click', function() {
		RIVER_INCREMENT += 25;
		if (RIVER_INCREMENT > RIVER_DATA.news.regular.length) {
			RIVER_INCREMENT = RIVER_DATA.news.regular.length;
			$(this).hide();
		}
		update_news();
	});


    /* BALANCE OF POWER */
    function update_bop(bop) {
        $('#pres-d-total').text(bop.president.democrats.total);
        $("#pres-header .blue").toggleClass("winner", bop.president.democrats.total >= ELECTORAL_VOTES_TO_WIN)
        $('#pres-r-total').text(bop.president.republicans.total);
        $("#pres-header .red").toggleClass("winner", bop.president.republicans.total >= ELECTORAL_VOTES_TO_WIN)
        $('#pres-d-towin').text(bop.president.democrats.needed_for_majority);
        $('#pres-r-towin').text(bop.president.republicans.needed_for_majority);
        $('#sen-d-total').text(bop.senate.democrats.total);
        $('#sen-r-total').text(bop.senate.republicans.total);
        $('#sen-d-majority').text(bop.senate.democrats.needed_for_majority);
        $('#sen-r-majority').text(bop.senate.republicans.needed_for_majority);
        $('#house-d-total').text(bop.house.democrats.total);
        $('#house-r-total').text(bop.house.republicans.total);
        $('#house-d-majority').text(bop.house.democrats.needed_for_majority);
        $('#house-r-majority').text(bop.house.republicans.needed_for_majority);
    }

/* POST-ELECTION MODES */

    var $replay_button = $('#modeReplay');
    var $pause_button = $('#modeReplayPause');
    var $game_button = $('#modeGame');
    var $replay_time = $('.remote .time');
    var $toggle_8 = $('div.toggle');

    var replay_states = [];
    var replay_timer = 0;
    var replay_datetime = 1352246661;
    var play_time = null;
    var game_states = [];
    var game_states_number = 44;
    var game_mode = false

    /* GAME MODE FUNCTIONS */
    function initModeGame(){
        $body.addClass('wide-mode');
        $("#results").addClass('active');
        $("#results-tab").attr('href','#results');

        states = [];
        $('div.bucket').html('');

        $.getJSON("replay.json?t=" + (new Date()).getTime(), function(list_of_states){
            $('.tossups').html('');
            _.each(list_of_states, function(state, index, list){
                if (index >= game_states_number) {
                    state.call = null;

                    // RENDERS TEMPLATE FOR CHICLET
                    var html = TOSSUP_TEMPLATE({
                        state: state
                    });

                    // ADDS TO TOSSUP HTML (CHICLETS)
                    red_tossups_el.append(html);
                    blue_tossups_el.append(html);
                }
                states.push(state);
            });

            // TODO: sort array in reverse order
            states = states.reverse();
            add_states();
            compute_stats(true);

            // INITIALIZE CLICK HANDLERS
            $(".tossups li").touchClick(tossup_click_handler);
            if (SHOW_TOOLTIPS) {
                $(".tossups li").tooltip();
            }
            wide_mode = false;
            resize_buckets();
        });

    }

    function clearModeGame(){
        $body.removeClass('wide-mode');
        flip_skinny_mode();
        $game_button.removeClass('active').text('Try Game Mode');
        game_mode = false;
        tossup_picks = [];
    }

    /* FINAL MODE FUNCTIONS */
    function initModeFinal(initial) {
        // if we're switching between modes, blank the states array.
        if (initial == false) {
            states = []
            utilityAlertPresident();
        }

        // fetch the states from the results json.
        fetch_states();

        // if this is the first page load, get news and the memes.
        if (initial == true) {
            fetch_news();
            update_memetracker(true);
        }
    }

    function clearModeFinal() {
        states = []
    }

    /* REPLAY MODE FUNCTIONS */

    function clearModeReplay(){
        $replay_button.attr('data-status', 'initial');
        resetModeReplayTimer(play_time);
        resetModeReplayStatus();
        $replay_button.attr('data-status', 'initial').removeClass('active').show();
        $pause_button.attr('data-status', 'initial').removeClass('active').hide();
		$replay_time.hide();
    }

    function initModeReplay(button) {
        $('.time').show();
        $replay_button.hide();
        $pause_button.show();


        if ($(button).attr('data-status') == 'initial') {
            resetModeReplayStatus();
            resetModeReplayTimer(play_time);
            replay_states = [];
            $.getJSON("replay.json?t=" + (new Date()).getTime(), function(states){
                _.each(states, function(state){
                    replay_states.push(state);
                });
            });
			$replay_button.addClass('active');
			$pause_button.addClass('active');
            beginModeReplay();
        }

        if ($(button).attr('data-status') == 'paused'){
            beginModeReplay();
        }
    }

    function pauseModeReplay(button) {

        if ($(button).attr('data-status') == 'paused') {
            $pause_button.hide()
            $replay_button.show()
            beginModeReplay();
        }

        if ($(button).attr('data-status') == 'playing'){
            $pause_button.hide()
            $replay_button.show()
            $('.fall').addClass('fallfast').removeClass('fall');
            pauseModeReplayTimer(play_time);
        }
    }

    function pauseModeReplayTimer(timer){
        $pause_button.attr('data-status', 'paused');
        $replay_button.attr('data-status', 'paused');
        clearInterval(timer);
    }

    function resetModeReplayTimer(timer){
        pauseModeReplayTimer(timer);
        replay_timer = 0;
        replay_datetime = 1352246661;
        $replay_time.text('6:00 pm ET (Nov 6th)');
    }

    function resetModeReplayStatus(){
        $('div.bucket').html('');
        freeze_alerts = false;
        alerts = [];
        update_alerts();
    }

    function beginModeReplay(){
        $pause_button.show()
        $replay_button.hide()
        $pause_button.attr('data-status', 'playing');
        $replay_button.attr('data-status', 'playing');
        play_time = setInterval(function(){ getModeReplayStates(); }, 1000);
    }

    function getModeReplayStates(){
        _.each(replay_states, function(state){
            if (state.scaled_time == replay_timer) {
                add_state(state, true);
                if (state["call"] === "r") {
                    var side = "red";
                } else {
                    var side = "blue";
                }
                var candidate = (state["call"] == "d" ? "Barack Obama" : "Mitt Romney");
                if (state.name != 'Wisconsin') {
                    alerts.push({
                        body: 'NPR now projects that <strong class="alert-name">' + candidate + '</strong> will win <strong class="alert-state"><b>' + state.stateface + '</b> ' + state.name + ' (' + state.electoral_votes + ')</strong>',
                        side: side,
                    });
                    update_alerts();
                }
            }
        });
        replay_timer += 1000;
        var m = moment.unix(replay_datetime);
        $replay_time.text(m.format('h:mm a ET (MMM Do)'));
        replay_datetime += 312;

        if (replay_timer == 61000) {
            replay_timer = 200000;
            replay_datetime = 1352569221;
        }
        if (replay_timer == 51000) {
            utilityAlertPresident();
        }
        if (replay_timer == 52000) {
            freeze_alerts = true;
        }
        if (replay_timer == 206000) {
			pauseModeReplayTimer(play_time);
			$pause_button.attr('data-status', 'playing').removeClass('active').hide()
			$replay_button.attr('data-status', 'initial').removeClass('active').show();
			$replay_time.hide();
			initModeFinal(false);
        }
    }

    /* CLICK EVENTS FOR VARIOUS MODES */
    $game_button.on('click', function(){
    	if (!game_mode) {
			clearModeReplay();
			clearModeFinal();
			initModeGame();
			$(this).addClass('active').text('Close Game Mode');
			game_mode = true;
		} else {
			clearModeReplay();
			clearModeGame();
			initModeFinal(false);
		}
    });

    $replay_button.on('click', function(){
        clearModeGame();
        clearModeFinal();
        initModeReplay(this);
    });

    $pause_button.on('click', function(){
        pauseModeReplay(this);
    });

    /* 8-BIT */

    var time = (new Date()).getTime();
    var audio_player = null;

    function audioPlay() {
        if (audio_player === null) {
            var audio= new Audio();
            audio.id = 'hail';
            audio.preload = 'auto';
            audio.innerHTML="<source src='../bin/hail-to-the-chief.ogg' type='audio/ogg'><source src='../bin/hail-to-the-chief.mp3' type='audio/mpeg'>";
            document.body.appendChild(audio);
            audio_player = $('#hail')[0];
        }

        audio_player.play();
    };

    $toggle_8.on('click', function(){
        if ($(this).hasClass('on')){
            $toggle_8.addClass('off').removeClass('on');
            $('link[href="../css/app-8bit.css?=' + time + '"]').remove();
            clearTimeout(e);
            audio_player.pause();
        } else {
            $toggle_8.addClass('on').removeClass('off');
            var s=document.createElement('link');
            s.rel='stylesheet';
            s.type='text/css';
            s.href='../css/app-8bit.css?=' + time + '';
            document.body.appendChild(s);
            var e=setTimeout(audioPlay(), 2000);
        }
    });

    /* Utility functions for resetting states. */
    function  utilityAlertPresident(){
        alert_text = 'NPR projects that <strong class="alert-name">Barack Obama</strong> will win re-election. <strong><b>z</b></strong>';
        side = "blue";
        alerts = [];
        alerts.push({body:alert_text, side: side, winner: true});
        update_alerts();
    }

	// Initialize the page in final mode.
    initModeFinal(true);
});
